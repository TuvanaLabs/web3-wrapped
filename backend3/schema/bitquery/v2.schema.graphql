schema {
  query: RootQuery
  subscription: RootSubscription
}

"""Block fields"""
type EVM_BalanceUpdate_Fields_Block {
  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_BalanceUpdate_Fields_Block_L1

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime
  ): DateTime
}

"""Listed names of fields in a cube"""
enum EVM_Transfer_EnumFields {
  """"""
  Fee_EffectiveGasPrice

  """"""
  Transfer_URI

  """"""
  Call_SelfDestruct

  """"""
  Transfer_Type

  """"""
  Transfer_Currency_Symbol

  """"""
  Block_Coinbase

  """"""
  Transaction_From

  """"""
  Block_L1_Hash

  """"""
  Call_GasUsed

  """"""
  Log_Signature_Parsed

  """"""
  Transfer_Currency_DelegatedTo

  """"""
  Transfer_Currency_Native

  """"""
  Call_Signature_SignatureType

  """"""
  Block_Nonce

  """"""
  Call_Delegated

  """"""
  Call_Signature_SignatureHash

  """"""
  Transfer_Amount

  """"""
  Receipt_L1_GasPrice

  """"""
  Block_ParentHash

  """"""
  Block_Number

  """"""
  Call_Signature_Parsed

  """"""
  Log_Signature_Signature

  """"""
  Log_Index

  """"""
  Transfer_Currency_SmartContract

  """"""
  Log_LogAfterCallIndex

  """"""
  Fee_GasRefund

  """"""
  TransactionStatus_EndError

  """"""
  Transfer_Currency_ProtocolName

  """"""
  Call_Signature_Name

  """"""
  Transfer_Currency_HasURI

  """"""
  Transaction_Type

  """"""
  Transaction_Hash

  """"""
  Log_SmartContract

  """"""
  Transfer_Id

  """"""
  Log_Signature_SignatureHash

  """"""
  Call_InternalCalls

  """"""
  Block_Hash

  """"""
  Transfer_Currency_Decimals

  """"""
  Call_CallPath

  """"""
  Fee_MinerReward

  """"""
  Transfer_Currency_Delegated

  """"""
  Log_Signature_Name

  """"""
  Block_GasUsed

  """"""
  Fee_SenderFee

  """"""
  Fee_Savings

  """"""
  Call_Create

  """"""
  Call_From

  """"""
  Transfer_Currency_Fungible

  """"""
  Block_Time

  """"""
  Receipt_ContractAddress

  """"""
  TransactionStatus_Success

  """"""
  Call_Value

  """"""
  Transaction_GasPrice

  """"""
  Fee_Burnt

  """"""
  Call_Error

  """"""
  Transfer_Receiver

  """"""
  Block_Difficulty

  """"""
  Transaction_Time

  """"""
  Call_Signature_Abi

  """"""
  Call_Signature_Signature

  """"""
  Call_Success

  """"""
  Receipt_Type

  """"""
  Receipt_Status

  """"""
  Transaction_Protected

  """"""
  Call_Index

  """"""
  Block_L1_ParentHash

  """"""
  Transfer_Currency_Name

  """"""
  Transaction_Gas

  """"""
  Block_BaseFee

  """"""
  Transaction_To

  """"""
  Call_Reverted

  """"""
  Log_Signature_SignatureType

  """"""
  Transfer_Success

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Receipt_L1_Fee

  """"""
  Transaction_GasTipCap

  """"""
  Call_To

  """"""
  Transaction_Cost

  """"""
  Fee_PriorityFeePerGas

  """"""
  Transfer_Data

  """"""
  TransactionStatus_FaultError

  """"""
  Log_Signature_Abi

  """"""
  Block_Date

  """"""
  Transaction_Value

  """"""
  Transaction_Nonce

  """"""
  Transaction_Index

  """"""
  Transaction_GasFeeCap

  """"""
  ChainId

  """"""
  Call_CallerIndex

  """"""
  Transfer_Sender

  """"""
  Block_GasLimit

  """"""
  Call_Gas

  """"""
  Receipt_GasUsed
}

"""Array of Trade_Ids includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Trade_Ids_Select_Trade_Ids {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]
}

"""Select by Call"""
input EVM_Event_Input_Call_InputType {
  """"""
  From: OLAP_String

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Gas: OLAP_BigInteger

  """"""
  CallPath: EVM_Event_Input_Call_CallPath_Input_Call_CallPath

  """"""
  To: OLAP_String

  """"""
  InternalCalls: OLAP_Integer

  """"""
  Success: Boolean

  """"""
  Reverted: Boolean

  """"""
  Value: EVM_Amount_With_Decimals

  """"""
  Signature: EVM_Event_Input_Call_Signature_InputType

  """"""
  Error: OLAP_String

  """"""
  Input: OLAP_String

  """"""
  CallerIndex: OLAP_Integer

  """"""
  Output: OLAP_String

  """"""
  Create: Boolean

  """"""
  Delegated: Boolean

  """"""
  SelfDestruct: Boolean

  """"""
  Index: OLAP_Integer
}

"""TransactionStatus fields"""
type EVM_Event_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): Boolean
}

"""Selector for Arguments"""
input EVM_Call_Fields_Arguments_Select_FieldSelector {
  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Call_Fields_Arguments_Select_FieldSelector_Arguments_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""Smart contract log events in EVM Blockchain"""
type EVM_Event_Cube {
  """Arguments value"""
  Arguments(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Event_Fields_Arguments_Select_Arguments
  ): [EVM_Event_Fields_Arguments]

  """Block fields"""
  Block: EVM_Event_Fields_Block

  """Call fields"""
  Call: EVM_Event_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Fee fields"""
  Fee: EVM_Event_Fields_Fee

  """Log fields"""
  Log: EVM_Event_Fields_Log

  """LogHeader fields"""
  LogHeader: EVM_Event_Fields_LogHeader

  """Receipt fields"""
  Receipt: EVM_Event_Fields_Receipt

  """Topics value"""
  Topics(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Event_Fields_Topics_Select_Topics

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): [EVM_Event_Fields_Topics]

  """Transaction fields"""
  Transaction: EVM_Event_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_Event_Fields_TransactionStatus

  """Average of the values"""
  average(
    """Argument for Average of the values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Event_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Event_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Event_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_Event_EnumFields]

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_Event_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Event_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Event_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Event_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """Argument for Dispersion for a set of values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_Event_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Argument for Kurtosis for a set of values"""
    of: EVM_Event_NumFields!
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_Event_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_Event_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Event_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_Event_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_Event_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Event_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Event_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Event_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_Event_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Interval for date rounding"""
input OLAP_DateInterval {
  """Interval size in specified units ( default is day )"""
  count: Int

  """Offset in specified units ( default is day )"""
  offset: Int

  """Interval units ( default is second )"""
  in: OLAP_DateIntervalUnits
}

"""Select by Signature"""
input EVM_Call_Input_Call_Signature_InputType {
  """"""
  SignatureHash: OLAP_String

  """"""
  SignatureType: Boolean

  """"""
  Abi: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  Parsed: Boolean

  """"""
  Signature: OLAP_String
}

"""Call fields"""
type EVM_BalanceUpdate_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_BalanceUpdate_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Select filters for BalanceUpdate_Type"""
input EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type {
  """Not this"""
  not: EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input

  """One of the values"""
  in: [EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input]

  """Not one of the values"""
  notIn: [EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input]

  """Exact match"""
  is: EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input
}

"""L1 fields"""
type EVM_Transfer_Fields_Block_L1 {
  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Big Integer ( more than 32 bits precision), including negative numbers"""
input OLAP_BigInteger {
  """Equal to value"""
  eq: String

  """Not equal to value"""
  ne: String

  """Number in the provided list"""
  in: [String]

  """Number is not in the provided list"""
  notIn: [String]

  """Greater than the value"""
  ge: String

  """Less than the value"""
  le: String

  """Greater or equal the value"""
  gt: String

  """Less or equal the value"""
  lt: String
}

"""Limit definition"""
input EVM_MinerReward_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Returns_Path fields"""
type EVM_Call_Fields_Returns_Path {
  """"""
  Index: Int

  """"""
  Name: String

  """"""
  Type: String
}

"""Array of Trade_Buy_URIs includes or excludes provided value"""
input EVM_DEXTrade_Fields_Trade_Buy_URIs_Select_Trade_Buy_URIs {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""Array of Trade_Fees includes or excludes provided value"""
input EVM_DEXTrade_Fields_Trade_Fees_Select_Trade_Fees {
  """Does not End with this element"""
  notEndsWith: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector]
}

"""Enumeration for BalanceUpdate_Type"""
enum EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type_Input {
  """BalanceUpdate_Type transfer"""
  transfer

  """BalanceUpdate_Type fee"""
  fee

  """BalanceUpdate_Type block_reward"""
  block_reward

  """BalanceUpdate_Type uncle_reward"""
  uncle_reward

  """BalanceUpdate_Type genesis"""
  genesis

  """BalanceUpdate_Type other"""
  other
}

"""Select by Signature"""
input EVM_DEXTradeByToken_Input_Call_Signature_InputType {
  """"""
  SignatureHash: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  Signature: OLAP_String

  """"""
  SignatureType: Boolean

  """"""
  Parsed: Boolean

  """"""
  Abi: OLAP_String
}

"""Listed names of comparable fields in a cube"""
enum EVM_DEXTradeByToken_CompareFields {
  """"""
  Trade_Side_Currency_Fungible

  """"""
  Block_Difficulty

  """"""
  Trade_Currency_Fungible

  """"""
  Call_InternalCalls

  """"""
  Transaction_Cost

  """"""
  Block_Number

  """"""
  Call_Gas

  """"""
  Log_Signature_Parsed

  """"""
  Log_Index

  """"""
  Receipt_Type

  """"""
  Fee_Burnt

  """"""
  Trade_Dex_Delegated

  """"""
  Transaction_Index

  """"""
  Fee_GasRefund

  """"""
  Trade_Currency_HasURI

  """"""
  Transaction_GasPrice

  """"""
  Transaction_Gas

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Block_Nonce

  """"""
  Call_Index

  """"""
  Transaction_Protected

  """"""
  Call_SelfDestruct

  """"""
  Trade_Currency_Decimals

  """"""
  Call_Signature_SignatureType

  """"""
  Receipt_L1_GasPrice

  """"""
  Fee_Savings

  """"""
  TransactionStatus_Success

  """"""
  Receipt_GasUsed

  """"""
  Trade_Side_Amount

  """"""
  Trade_Side_Currency_Decimals

  """"""
  Fee_MinerReward

  """"""
  Call_Create

  """"""
  Log_LogAfterCallIndex

  """"""
  Trade_Success

  """"""
  Transaction_GasFeeCap

  """"""
  Trade_Side_Currency_HasURI

  """"""
  Transaction_Value

  """"""
  Transaction_Type

  """"""
  Block_Time

  """"""
  Call_Signature_Parsed

  """"""
  Block_Date

  """"""
  Trade_Price

  """"""
  Log_Signature_SignatureType

  """"""
  Receipt_L1_Fee

  """"""
  Call_GasUsed

  """"""
  Fee_EffectiveGasPrice

  """"""
  Call_Success

  """"""
  Receipt_Status

  """"""
  Block_BaseFee

  """"""
  ChainId

  """"""
  Block_GasLimit

  """"""
  Call_Value

  """"""
  Fee_PriorityFeePerGas

  """"""
  Trade_Amount

  """"""
  Trade_Dex_Pair_Decimals

  """"""
  Call_Delegated

  """"""
  Block_GasUsed

  """"""
  Fee_SenderFee

  """"""
  Transaction_GasTipCap

  """"""
  Transaction_Nonce

  """"""
  Call_CallerIndex

  """"""
  Call_Reverted
}

"""Holder fields"""
type EVM_TokenHolder_Fields_Holder {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Array of Trade_Buy_URIs includes or excludes provided value"""
input EVM_DEXTrade_Input_Trade_Buy_URIs_Input_Trade_Buy_URIs {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""Fee fields"""
type EVM_DEXTrade_Fields_Fee {
  """Burnt value"""
  Burnt(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasRefund value"""
  GasRefund(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """MinerReward value"""
  MinerReward(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Savings value"""
  Savings(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFee value"""
  SenderFee(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Enumeration for Trade_Side"""
enum EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""L1 fields"""
type EVM_Uncle_Fields_Block_L1 {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): String
}

"""Limit definition"""
input EVM_Block_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Trade_Fees_Currency fields"""
type EVM_DEXTradeByToken_Fields_Trade_Trade_Fees_Currency {
  """"""
  Decimals: Int

  """"""
  Name: String

  """"""
  ProtocolName: String

  """"""
  SmartContract: String

  """"""
  Symbol: String
}

"""Listed names of fields in a cube"""
enum EVM_TokenHolder_EnumFields {
  """"""
  Balance_Amount

  """"""
  BalanceUpdate_InCount

  """"""
  BalanceUpdate_OutAmount

  """"""
  BalanceUpdate_FirstDate

  """"""
  Currency_Delegated

  """"""
  Currency_Native

  """"""
  Currency_ProtocolName

  """"""
  Currency_Name

  """"""
  Currency_HasURI

  """"""
  BalanceUpdate_InAmount

  """"""
  Currency_Fungible

  """"""
  BalanceUpdate_Count

  """"""
  BalanceUpdate_OutCount

  """"""
  Currency_DelegatedTo

  """"""
  Currency_SmartContract

  """"""
  BalanceUpdate_LastDate

  """"""
  Holder_Address

  """"""
  Currency_Decimals

  """"""
  Currency_Symbol
}

"""LimitBy definition"""
input EVM_Call_LimitBy {
  """Limit by specific field"""
  by: [EVM_Call_EnumFields]

  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Select by Call"""
input EVM_BalanceUpdate_Input_Call_InputType {
  """"""
  CallPath: EVM_BalanceUpdate_Input_Call_CallPath_Input_Call_CallPath

  """"""
  Index: OLAP_Integer
}

"""Select by Trade"""
input EVM_DEXTradeByToken_Input_Trade_InputType {
  """"""
  Currency: EVM_DEXTradeByToken_Input_Trade_Currency_InputType

  """"""
  Fees: EVM_DEXTradeByToken_Input_Trade_Fees_Input_Trade_Fees

  """"""
  Seller: OLAP_String

  """"""
  Side: EVM_DEXTradeByToken_Input_Trade_Side_InputType

  """"""
  Amount: EVM_Amount_With_Decimals

  """"""
  Success: Boolean

  """"""
  URIs: EVM_DEXTradeByToken_Input_Trade_URIs_Input_Trade_URIs

  """"""
  Sender: OLAP_String

  """"""
  Ids: EVM_DEXTradeByToken_Input_Trade_Ids_Input_Trade_Ids

  """"""
  Buyer: OLAP_String

  """"""
  Dex: EVM_DEXTradeByToken_Input_Trade_Dex_InputType

  """"""
  OrderId: OLAP_String

  """"""
  Price: OLAP_Float
}

"""Select by Result"""
input EVM_MinerReward_Input_Block_Result_InputType {
  """"""
  Errors: OLAP_String

  """"""
  Gas: OLAP_BigInteger
}

"""Select by Block"""
input EVM_DEXTrade_Input_Block_InputType {
  """"""
  Coinbase: OLAP_String

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Date: OLAP_Date

  """"""
  Hash: OLAP_String

  """"""
  Number: OLAP_BigInteger

  """"""
  Time: OLAP_DateTime

  """"""
  ParentHash: OLAP_String

  """"""
  Nonce: OLAP_BigInteger

  """"""
  L1: EVM_DEXTrade_Input_Block_L1_InputType

  """"""
  BaseFee: OLAP_BigInteger

  """"""
  Difficulty: OLAP_BigInteger

  """"""
  GasLimit: OLAP_BigInteger
}

"""Array of Returns_Path includes or excludes provided value"""
input EVM_Call_Input_Returns_Input_FieldSelector_Returns_Path {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector]
}

"""Select by Receipt"""
input EVM_DEXTradeByToken_Input_Receipt_InputType {
  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Type: OLAP_Integer

  """"""
  ContractAddress: OLAP_String

  """"""
  L1: EVM_DEXTradeByToken_Input_Receipt_L1_InputType

  """"""
  Status: OLAP_BigInteger

  """"""
  CumulativeGasUsed: OLAP_BigInteger
}

"""Call fields"""
type EVM_DEXTrade_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): Int

  """Create value"""
  Create(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Error value"""
  Error(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Index value"""
  Index(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): Int

  """InternalCalls value"""
  InternalCalls(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature fields"""
  Signature: EVM_DEXTrade_Fields_Call_Signature

  """Success value"""
  Success(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): Boolean

  """To value"""
  To(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""Selector for Arguments"""
input EVM_Call_Input_Arguments_Input_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Call_Input_Arguments_Input_FieldSelector_Arguments_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector
}

"""BalanceUpdate fields"""
type EVM_BalanceUpdate_Fields_BalanceUpdate {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Amount value"""
  Amount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields
  ): String

  """Id value"""
  Id(
    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields
  ): String

  """Type value"""
  Type(
    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_BalanceUpdate_Fields_BalanceUpdate_Type_Select_BalanceUpdate_Type

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): EVM_BalanceUpdate_Fields_BalanceUpdate_BalanceUpdate_Type_Output

  """URI value"""
  URI(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields
  ): String
}

"""Select by Signature"""
input EVM_DEXTradeByToken_Input_Log_Signature_InputType {
  """"""
  Signature: OLAP_String

  """"""
  Parsed: Boolean

  """"""
  Abi: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  SignatureType: OLAP_Integer

  """"""
  SignatureHash: OLAP_String
}

"""Selector for Arguments_Path"""
input EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer
}

"""L1 fields"""
type EVM_DEXTrade_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """GasPrice value"""
  GasPrice(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String
}

"""Signature fields"""
type EVM_DEXTrade_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureType value"""
  SignatureType(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Boolean
}

"""Select by L1"""
input EVM_Call_Input_Receipt_L1_InputType {
  """"""
  GasPrice: EVM_Amount_With_Decimals

  """"""
  Fee: EVM_Amount_With_Decimals
}

"""Selector for StateChanges"""
input EVM_Call_Fields_StateChanges_Select_FieldSelector {
  """Select value for ChangeAfterCallIndex"""
  ChangeAfterCallIndex: OLAP_Integer

  """Select value for Address"""
  Address: OLAP_String

  """Select value for Location"""
  Location: OLAP_String

  """Select value for Value"""
  Value: OLAP_String
}

"""Block fields"""
type EVM_Block_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Bloom value"""
  Bloom(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Extra value"""
  Extra(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_Block_Fields_Block_L1

  """MixDigest value"""
  MixDigest(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ReceiptHash value"""
  ReceiptHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields
  ): String

  """Result fields"""
  Result: EVM_Block_Fields_Block_Result

  """Root value"""
  Root(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime
  ): DateTime

  """TxCount value"""
  TxCount(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """TxHash value"""
  TxHash(
    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields
  ): String

  """UncleHash value"""
  UncleHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields
  ): String

  """UnclesCount value"""
  UnclesCount(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Block fields"""
type EVM_MinerReward_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Bloom value"""
  Bloom(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """Coinbase value"""
  Coinbase(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Extra value"""
  Extra(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """GasLimit value"""
  GasLimit(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_MinerReward_Fields_Block_L1

  """MixDigest value"""
  MixDigest(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String

  """ReceiptHash value"""
  ReceiptHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Result fields"""
  Result: EVM_MinerReward_Fields_Block_Result

  """Root value"""
  Root(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """TxCount value"""
  TxCount(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """TxHash value"""
  TxHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String

  """UncleHash value"""
  UncleHash(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """UnclesCount value"""
  UnclesCount(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""TransactionStatus fields"""
type EVM_DEXTrade_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): Boolean
}

""""""
input EVM_Call_Filter {
  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Block"""
  Block: EVM_Call_Input_Block_InputType

  """Select by Call"""
  Call: EVM_Call_Input_Call_InputType

  """Select by Transaction"""
  Transaction: EVM_Call_Input_Transaction_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Call_Input_TransactionStatus_InputType

  """Array of Arguments includes or excludes provided value"""
  Arguments: EVM_Call_Input_Arguments_Input_Arguments

  """Array of StateChanges includes or excludes provided value"""
  StateChanges: EVM_Call_Input_StateChanges_Input_StateChanges

  """Select by Fee"""
  Fee: EVM_Call_Input_Fee_InputType

  """Select by Receipt"""
  Receipt: EVM_Call_Input_Receipt_InputType

  """Array of Returns includes or excludes provided value"""
  Returns: EVM_Call_Input_Returns_Input_Returns
}

"""Select by Uncle"""
input EVM_Uncle_Input_Uncle_InputType {
  """"""
  Index: OLAP_Integer

  """"""
  Block: EVM_Uncle_Input_Uncle_Block_InputType
}

"""Listed names of fields in a cube"""
enum EVM_Call_EnumFields {
  """"""
  Fee_Burnt

  """"""
  Call_Signature_SignatureType

  """"""
  Block_Time

  """"""
  Call_Input

  """"""
  Block_Nonce

  """"""
  Call_Gas

  """"""
  Receipt_L1_GasPrice

  """"""
  Block_Number

  """"""
  Call_InternalCalls

  """"""
  Block_L1_Hash

  """"""
  Call_Signature_Signature

  """"""
  StateChanges

  """"""
  Transaction_Gas

  """"""
  Block_ParentHash

  """"""
  Transaction_Protected

  """"""
  Call_ExitIndex

  """"""
  Call_Opcode_Code

  """"""
  Transaction_Type

  """"""
  Transaction_Cost

  """"""
  Block_L1_Coinbase

  """"""
  Receipt_GasUsed

  """"""
  Transaction_GasPrice

  """"""
  TransactionStatus_Success

  """"""
  Receipt_L1_Fee

  """"""
  Call_CallPath

  """"""
  Block_Hash

  """"""
  Call_Signature_Name

  """"""
  Transaction_Time

  """"""
  Fee_SenderFee

  """"""
  Block_GasUsed

  """"""
  Call_Signature_Abi

  """"""
  Block_L1_ParentHash

  """"""
  Call_Opcode_Name

  """"""
  Call_EnterIndex

  """"""
  Call_CallerIndex

  """"""
  Call_LogCount

  """"""
  Call_Reverted

  """"""
  Call_From

  """"""
  Call_Index

  """"""
  Transaction_Hash

  """"""
  Transaction_From

  """"""
  Fee_PriorityFeePerGas

  """"""
  Receipt_Type

  """"""
  Call_Delegated

  """"""
  TransactionStatus_FaultError

  """"""
  Receipt_Status

  """"""
  Call_To

  """"""
  Call_Depth

  """"""
  Call_Output

  """"""
  Block_BaseFee

  """"""
  TransactionStatus_EndError

  """"""
  Block_Difficulty

  """"""
  Transaction_Value

  """"""
  Call_Create

  """"""
  Returns

  """"""
  Arguments

  """"""
  ChainId

  """"""
  Transaction_Index

  """"""
  Fee_MinerReward

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Call_Signature_SignatureHash

  """"""
  Call_Value

  """"""
  Block_Coinbase

  """"""
  Call_Signature_Parsed

  """"""
  Transaction_GasTipCap

  """"""
  Call_GasUsed

  """"""
  Receipt_ContractAddress

  """"""
  Transaction_GasFeeCap

  """"""
  Call_Error

  """"""
  Call_SelfDestruct

  """"""
  Block_Date

  """"""
  Fee_GasRefund

  """"""
  Transaction_Nonce

  """"""
  Transaction_To

  """"""
  Call_Success

  """"""
  Block_GasLimit

  """"""
  Fee_Savings

  """"""
  Fee_EffectiveGasPrice
}

"""Selector for Returns"""
input EVM_Call_Fields_Returns_Select_FieldSelector {
  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Call_Fields_Returns_Select_FieldSelector_Returns_Path

  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String
}

"""Select filters for BalanceUpdate_Type"""
input EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type {
  """Exact match"""
  is: EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input

  """Not this"""
  not: EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input

  """One of the values"""
  in: [EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input]

  """Not one of the values"""
  notIn: [EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input]
}

"""Selector for Trade_Fees"""
input EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector {
  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals

  """Select value for Payer"""
  Payer: OLAP_String
}

"""Selector for Arguments_Path"""
input EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector {
  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""Select by Transaction"""
input EVM_Event_Input_Transaction_InputType {
  """"""
  Value: EVM_Amount_With_Decimals

  """"""
  Nonce: OLAP_BigInteger

  """"""
  GasPrice: EVM_Amount_With_Decimals

  """"""
  Type: OLAP_Integer

  """"""
  Time: OLAP_BigInteger

  """"""
  GasFeeCap: EVM_Amount_With_Decimals

  """"""
  GasTipCap: EVM_Amount_With_Decimals

  """"""
  To: OLAP_String

  """"""
  Hash: OLAP_String

  """"""
  Index: OLAP_BigInteger

  """"""
  Protected: Boolean

  """"""
  Cost: EVM_Amount_With_Decimals

  """"""
  From: OLAP_String

  """"""
  Gas: OLAP_BigInteger
}

"""Select by LogHeader"""
input EVM_Event_Input_LogHeader_InputType {
  """"""
  Data: OLAP_String

  """"""
  Removed: Boolean

  """"""
  Index: OLAP_BigInteger

  """"""
  Address: OLAP_String
}

"""Block fields"""
type EVM_Uncle_Fields_Uncle_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Bloom value"""
  Bloom(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Extra value"""
  Extra(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """MixDigest value"""
  MixDigest(
    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields
  ): String

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ReceiptHash value"""
  ReceiptHash(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): String

  """Root value"""
  Root(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime

  """TxHash value"""
  TxHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UncleHash value"""
  UncleHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String
}

"""Array of StateChanges includes or excludes provided value"""
input EVM_Call_Input_StateChanges_Input_StateChanges {
  """Starts with this element"""
  startsWith: [EVM_Call_Input_StateChanges_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Input_StateChanges_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Input_StateChanges_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Input_StateChanges_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Input_StateChanges_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Input_StateChanges_Input_FieldSelector]
}

"""Select by L1"""
input EVM_Transfer_Input_Receipt_L1_InputType {
  """"""
  Fee: EVM_Amount_With_Decimals

  """"""
  GasPrice: EVM_Amount_With_Decimals
}

"""Type of algorithm to filter block updates"""
enum dataset_arg_enum {
  """Realtime dataset containing last set of blocks"""
  realtime

  """Archive dataset with blocks delayed ( only trunk blocks included )"""
  archive

  """Combined dataset ( realtime and archive )"""
  combined
}

"""Select by Uncle"""
input EVM_MinerReward_Input_Uncle_InputType {
  """"""
  Block: EVM_MinerReward_Input_Uncle_Block_InputType

  """"""
  Index: OLAP_Integer
}

"""Select by L1"""
input EVM_Uncle_Input_Block_L1_InputType {
  """"""
  BaseFee: EVM_Amount_With_Decimals

  """"""
  Coinbase: OLAP_String

  """"""
  ParentHash: OLAP_String

  """"""
  Hash: OLAP_String
}

"""Order by"""
input EVM_Block_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_Block_EnumFields

  """Select a field to sort descending"""
  descending: EVM_Block_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""LimitBy definition"""
input EVM_MinerReward_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_MinerReward_EnumFields]
}

"""Selector for Trade_Fees"""
input EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector {
  """Select value for Payer"""
  Payer: OLAP_String

  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals
}

"""Select by TransactionStatus"""
input EVM_Call_Input_TransactionStatus_InputType {
  """"""
  Success: Boolean

  """"""
  EndError: OLAP_String

  """"""
  FaultError: OLAP_String
}

"""Listed names of comparable fields in a cube"""
enum EVM_MinerReward_CompareFields {
  """"""
  Uncle_Index

  """"""
  Uncle_Block_Time

  """"""
  Reward_Static

  """"""
  ChainId

  """"""
  Block_Nonce

  """"""
  Reward_Uncle

  """"""
  Uncle_Block_BaseFee

  """"""
  Uncle_Block_GasLimit

  """"""
  Block_UnclesCount

  """"""
  Reward_BurntFees

  """"""
  Block_BaseFee

  """"""
  Block_Date

  """"""
  Uncle_Block_Nonce

  """"""
  Reward_Total

  """"""
  Uncle_Block_GasUsed

  """"""
  Uncle_Block_Date

  """"""
  Block_Result_Gas

  """"""
  Block_GasUsed

  """"""
  Uncle_Block_Difficulty

  """"""
  Uncle_Block_Number

  """"""
  Block_Time

  """"""
  Reward_TxFees

  """"""
  Block_GasLimit

  """"""
  Block_Number

  """"""
  Block_Difficulty

  """"""
  Block_L1_BaseFee

  """"""
  Block_TxCount

  """"""
  Reward_Dynamic
}

"""Listed names of fields in a cube"""
enum EVM_DEXTrade_EnumFields {
  """"""
  Trade_Sell_Ids

  """"""
  Trade_Dex_ProtocolFamily

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Block_Nonce

  """"""
  Trade_Dex_ProtocolName

  """"""
  Trade_Fees

  """"""
  ChainId

  """"""
  Fee_MinerReward

  """"""
  Trade_Sell_Seller

  """"""
  Trade_Buy_Buyer

  """"""
  Transaction_Cost

  """"""
  Receipt_Status

  """"""
  Call_From

  """"""
  Trade_Dex_Pair_Name

  """"""
  Call_To

  """"""
  Log_Signature_SignatureHash

  """"""
  Call_Signature_SignatureHash

  """"""
  Transaction_GasTipCap

  """"""
  Trade_Buy_Currency_Decimals

  """"""
  Block_Coinbase

  """"""
  Trade_Buy_Currency_HasURI

  """"""
  Block_GasLimit

  """"""
  Call_Index

  """"""
  Call_GasUsed

  """"""
  TransactionStatus_Success

  """"""
  Call_Signature_Abi

  """"""
  Trade_Sell_Buyer

  """"""
  Log_Index

  """"""
  Trade_Dex_SmartContract

  """"""
  Call_Error

  """"""
  Trade_Success

  """"""
  Trade_Sell_Currency_Fungible

  """"""
  TransactionStatus_FaultError

  """"""
  Block_ParentHash

  """"""
  Trade_Dex_DelegatedTo

  """"""
  Receipt_L1_Fee

  """"""
  Fee_PriorityFeePerGas

  """"""
  Log_Signature_Name

  """"""
  Receipt_Type

  """"""
  Call_Create

  """"""
  Call_Signature_SignatureType

  """"""
  Trade_Buy_URIs

  """"""
  Fee_EffectiveGasPrice

  """"""
  Trade_Dex_OwnerAddress

  """"""
  Call_SelfDestruct

  """"""
  Trade_Sell_URIs

  """"""
  Trade_Sender

  """"""
  Trade_Dex_Pair_Decimals

  """"""
  Transaction_Protected

  """"""
  Block_Date

  """"""
  Call_CallerIndex

  """"""
  Trade_Buy_Seller

  """"""
  Trade_Sell_Currency_Decimals

  """"""
  Trade_Sell_OrderId

  """"""
  Trade_Sell_Amount

  """"""
  Call_Signature_Parsed

  """"""
  Trade_Buy_Currency_Symbol

  """"""
  Fee_Savings

  """"""
  Trade_Buy_Price

  """"""
  Block_BaseFee

  """"""
  Fee_GasRefund

  """"""
  Call_Value

  """"""
  Transaction_Index

  """"""
  Log_Signature_Parsed

  """"""
  Transaction_GasPrice

  """"""
  Trade_Sell_Currency_Symbol

  """"""
  Transaction_Time

  """"""
  Call_Signature_Signature

  """"""
  Call_CallPath

  """"""
  Trade_Sell_Price

  """"""
  Fee_SenderFee

  """"""
  Log_SmartContract

  """"""
  Block_Time

  """"""
  Trade_Buy_Ids

  """"""
  Call_Signature_Name

  """"""
  Trade_Buy_OrderId

  """"""
  Transaction_Hash

  """"""
  Call_Gas

  """"""
  Block_Hash

  """"""
  Log_Signature_Abi

  """"""
  Transaction_From

  """"""
  Trade_Dex_Delegated

  """"""
  Trade_Dex_Pair_SmartContract

  """"""
  Trade_Sell_Currency_ProtocolName

  """"""
  Block_Difficulty

  """"""
  Trade_Dex_ProtocolVersion

  """"""
  Transaction_Nonce

  """"""
  Trade_Buy_Amount

  """"""
  Transaction_Type

  """"""
  Receipt_L1_GasPrice

  """"""
  Transaction_Gas

  """"""
  Log_Signature_SignatureType

  """"""
  Log_Signature_Signature

  """"""
  Transaction_Value

  """"""
  Trade_Buy_Currency_ProtocolName

  """"""
  Trade_Buy_Currency_Name

  """"""
  Call_Success

  """"""
  Block_L1_ParentHash

  """"""
  Transaction_GasFeeCap

  """"""
  Trade_Buy_Currency_Fungible

  """"""
  Block_Number

  """"""
  Receipt_ContractAddress

  """"""
  Call_Reverted

  """"""
  Block_L1_Hash

  """"""
  Trade_Sell_Currency_HasURI

  """"""
  Transaction_To

  """"""
  Trade_Buy_Currency_SmartContract

  """"""
  Trade_Sell_Currency_SmartContract

  """"""
  Call_InternalCalls

  """"""
  Log_LogAfterCallIndex

  """"""
  TransactionStatus_EndError

  """"""
  Trade_Sell_Currency_Name

  """"""
  Block_GasUsed

  """"""
  Fee_Burnt

  """"""
  Receipt_GasUsed

  """"""
  Trade_Dex_Pair_Symbol

  """"""
  Call_Delegated
}

"""Select by Signature"""
input EVM_Transfer_Input_Log_Signature_InputType {
  """"""
  SignatureType: OLAP_Integer

  """"""
  Parsed: Boolean

  """"""
  Abi: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  Signature: OLAP_String

  """"""
  SignatureHash: OLAP_String
}

"""
The `DateTime` scalar type represents a DateTime. The DateTime is serialized as an RFC 3339 quoted string
"""
scalar DateTime

"""Selector for Trade_Fees_Currency"""
input EVM_DEXTrade_Fields_Trade_Fees_Select_FieldSelector_FieldSelector {
  """Select value for ProtocolName"""
  ProtocolName: OLAP_String

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String

  """Select value for Decimals"""
  Decimals: OLAP_Integer

  """Select value for SmartContract"""
  SmartContract: OLAP_String
}

"""Enumeration for Trade_Side"""
enum EVM_DEXTradeByToken_Fields_Trade_Side_Trade_Side_Output {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""Select by Result"""
input EVM_Uncle_Input_Block_Result_InputType {
  """"""
  Gas: OLAP_BigInteger

  """"""
  Errors: OLAP_String
}

"""Block fields"""
type EVM_BalanceUpdate_Fields_Uncle_Block {
  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""Array of Trade_Sell_Ids includes or excludes provided value"""
input EVM_DEXTrade_Input_Trade_Sell_Ids_Input_Trade_Sell_Ids {
  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]
}

"""Fee fields"""
type EVM_Call_Fields_Fee {
  """Burnt value"""
  Burnt(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasRefund value"""
  GasRefund(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """MinerReward value"""
  MinerReward(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Savings value"""
  Savings(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFee value"""
  SenderFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Selector for Trade_Fees"""
input EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector {
  """Select value for Payer"""
  Payer: OLAP_String

  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals
}

"""LimitBy definition"""
input EVM_Event_LimitBy {
  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_Event_EnumFields]

  """Max count in results"""
  count: Int = 0
}

"""Order by"""
input EVM_TokenHolder_Ordering {
  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: EVM_TokenHolder_EnumFields

  """Select a field to sort descending"""
  descending: EVM_TokenHolder_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String
}

"""Listed names of numeric fields in a cube"""
enum EVM_TokenHolder_NumFields {
  """"""
  BalanceUpdate_InCount

  """"""
  BalanceUpdate_OutAmount

  """"""
  BalanceUpdate_InAmount

  """"""
  Currency_Decimals

  """"""
  BalanceUpdate_Count

  """"""
  BalanceUpdate_OutCount

  """"""
  Balance_Amount
}

"""Select by Transaction"""
input EVM_Transaction_Input_Transaction_InputType {
  """"""
  GasFeeCap: OLAP_BigInteger

  """"""
  From: OLAP_String

  """"""
  Protected: Boolean

  """"""
  GasPrice: EVM_Amount_With_Decimals

  """"""
  AccessList: EVM_Transaction_Input_Transaction_AccessList_Input_Transaction_AccessList

  """"""
  GasTipCap: OLAP_BigInteger

  """"""
  Data: OLAP_String

  """"""
  Index: OLAP_BigInteger

  """"""
  Gas: OLAP_BigInteger

  """"""
  To: OLAP_String

  """"""
  Nonce: OLAP_BigInteger

  """"""
  Value: EVM_Amount_With_Decimals

  """"""
  Cost: EVM_Amount_With_Decimals

  """"""
  Type: OLAP_Integer

  """"""
  ToCode: EVM_Transaction_Input_Transaction_ToCode_InputType

  """"""
  Hash: OLAP_String

  """"""
  CallCount: OLAP_Integer

  """"""
  Time: OLAP_BigInteger
}

"""Listed names of numeric fields in a cube"""
enum EVM_Transaction_NumFields {
  """"""
  Signature_S

  """"""
  Receipt_L1_GasPrice

  """"""
  Transaction_GasPrice

  """"""
  Receipt_ContractAddressCode_Size

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Fee_PriorityFeePerGas

  """"""
  Fee_Burnt

  """"""
  Block_GasUsed

  """"""
  Transaction_ToCode_Size

  """"""
  Fee_GasRefund

  """"""
  Transaction_Nonce

  """"""
  Transaction_Index

  """"""
  Block_Difficulty

  """"""
  Block_BaseFee

  """"""
  Receipt_Status

  """"""
  Receipt_Type

  """"""
  Signature_V

  """"""
  Fee_MinerReward

  """"""
  Signature_R

  """"""
  Block_GasLimit

  """"""
  Receipt_GasUsed

  """"""
  Block_Number

  """"""
  Receipt_L1_Fee

  """"""
  Fee_Savings

  """"""
  Block_Nonce

  """"""
  Transaction_Value

  """"""
  Fee_SenderFee

  """"""
  Transaction_CallCount

  """"""
  Transaction_Cost

  """"""
  Transaction_Time

  """"""
  ChainId

  """"""
  Transaction_GasFeeCap

  """"""
  Fee_EffectiveGasPrice

  """"""
  Transaction_Type

  """"""
  Transaction_GasTipCap

  """"""
  Transaction_Gas
}

"""Array of Arguments includes or excludes provided value"""
input EVM_Call_Input_Arguments_Input_Arguments {
  """Includes this element"""
  includes: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Input_Arguments_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""LimitBy definition"""
input EVM_Block_LimitBy {
  """Limit by specific field"""
  by: [EVM_Block_EnumFields]

  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Select by Signature"""
input EVM_Transfer_Input_Call_Signature_InputType {
  """"""
  Name: OLAP_String

  """"""
  SignatureHash: OLAP_String

  """"""
  SignatureType: Boolean

  """"""
  Parsed: Boolean

  """"""
  Abi: OLAP_String

  """"""
  Signature: OLAP_String
}

"""Select by BalanceUpdate"""
input EVM_BalanceUpdate_Input_BalanceUpdate_InputType {
  """"""
  Amount: EVM_Amount_With_Decimals

  """"""
  Address: OLAP_String

  """"""
  Type: EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type

  """"""
  URI: OLAP_String

  """"""
  Id: OLAP_BigInteger
}

"""Select by Call"""
input EVM_Transfer_Input_Call_InputType {
  """"""
  Signature: EVM_Transfer_Input_Call_Signature_InputType

  """"""
  Reverted: Boolean

  """"""
  Create: Boolean

  """"""
  Index: OLAP_Integer

  """"""
  CallPath: EVM_Transfer_Input_Call_CallPath_Input_Call_CallPath

  """"""
  SelfDestruct: Boolean

  """"""
  To: OLAP_String

  """"""
  Error: OLAP_String

  """"""
  InternalCalls: OLAP_Integer

  """"""
  Gas: OLAP_BigInteger

  """"""
  Success: Boolean

  """"""
  CallerIndex: OLAP_Integer

  """"""
  From: OLAP_String

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Value: OLAP_BigInteger

  """"""
  Delegated: Boolean
}

"""Array of Transaction_AccessList includes or excludes provided value"""
input EVM_Transaction_Fields_Transaction_AccessList_Select_Transaction_AccessList {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector]
}

"""Select by Block"""
input EVM_DEXTradeByToken_Input_Block_InputType {
  """"""
  Time: OLAP_DateTime

  """"""
  Hash: OLAP_String

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  ParentHash: OLAP_String

  """"""
  Number: OLAP_BigInteger

  """"""
  Date: OLAP_Date

  """"""
  L1: EVM_DEXTradeByToken_Input_Block_L1_InputType

  """"""
  GasLimit: OLAP_BigInteger

  """"""
  Nonce: OLAP_BigInteger

  """"""
  BaseFee: OLAP_BigInteger

  """"""
  Difficulty: OLAP_BigInteger

  """"""
  Coinbase: OLAP_String
}

"""Selector for Trade_Fees_Currency"""
input EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector_FieldSelector {
  """Select value for ProtocolName"""
  ProtocolName: OLAP_String

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String

  """Select value for Decimals"""
  Decimals: OLAP_Integer

  """Select value for SmartContract"""
  SmartContract: OLAP_String
}

"""Select by Receipt"""
input EVM_Event_Input_Receipt_InputType {
  """"""
  Status: OLAP_BigInteger

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Type: OLAP_Integer

  """"""
  ContractAddress: OLAP_String

  """"""
  L1: EVM_Event_Input_Receipt_L1_InputType

  """"""
  CumulativeGasUsed: OLAP_BigInteger
}

"""Order by"""
input EVM_Call_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_Call_EnumFields

  """Select a field to sort descending"""
  descending: EVM_Call_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Select by Call"""
input EVM_DEXTradeByToken_Input_Call_InputType {
  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Index: OLAP_Integer

  """"""
  Reverted: Boolean

  """"""
  Error: OLAP_String

  """"""
  Value: OLAP_BigInteger

  """"""
  Delegated: Boolean

  """"""
  To: OLAP_String

  """"""
  Signature: EVM_DEXTradeByToken_Input_Call_Signature_InputType

  """"""
  Gas: OLAP_BigInteger

  """"""
  Create: Boolean

  """"""
  CallerIndex: OLAP_Integer

  """"""
  SelfDestruct: Boolean

  """"""
  From: OLAP_String

  """"""
  Success: Boolean

  """"""
  CallPath: EVM_DEXTradeByToken_Input_Call_CallPath_Input_Call_CallPath

  """"""
  InternalCalls: OLAP_Integer
}

""""""
enum OLAP_DateTimeIntervalUnits {
  """Interval in seconds"""
  seconds

  """Interval in minutes"""
  minutes

  """Interval in hours"""
  hours

  """Interval in days"""
  days

  """Interval in weeks"""
  weeks

  """Interval in months"""
  months

  """Interval in years"""
  years
}

"""Pair fields"""
type EVM_DEXTrade_Fields_Trade_Dex_Pair {
  """Decimals value"""
  Decimals(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Int

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Array of Trade_URIs includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Trade_URIs_Select_Trade_URIs {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Transactions in EVM Blockchain"""
type EVM_Transaction_Cube {
  """Block fields"""
  Block: EVM_Transaction_Fields_Block

  """ChainId value"""
  ChainId(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): String

  """Fee fields"""
  Fee: EVM_Transaction_Fields_Fee

  """Receipt fields"""
  Receipt: EVM_Transaction_Fields_Receipt

  """Signature fields"""
  Signature: EVM_Transaction_Fields_Signature

  """Transaction fields"""
  Transaction: EVM_Transaction_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_Transaction_Fields_TransactionStatus

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Transaction_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Transaction_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Count distinct values of the field"""
    distinct: [EVM_Transaction_EnumFields]
  ): String

  """Covariance between two arguments"""
  covariance(
    """First argument for Covariance between two arguments"""
    of: EVM_Transaction_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Transaction_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Transaction_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Transaction_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_Transaction_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_Transaction_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_Transaction_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Transaction_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Transaction_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_Transaction_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Transaction_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Transaction_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Transaction_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_Transaction_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Transaction fields"""
type EVM_Event_Fields_Transaction {
  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """From value"""
  From(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """GasPrice value"""
  GasPrice(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Protected value"""
  Protected(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Time value"""
  Time(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """To value"""
  To(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Limit definition"""
input EVM_Call_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Select by Log"""
input EVM_BalanceUpdate_Input_Log_InputType {
  """"""
  Index: OLAP_Integer

  """"""
  LogAfterCallIndex: OLAP_Integer
}

"""Call fields"""
type EVM_Event_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Event_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): Int

  """Create value"""
  Create(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Error value"""
  Error(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """From value"""
  From(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """Gas value"""
  Gas(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Index value"""
  Index(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): Int

  """Input value"""
  Input(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """InternalCalls value"""
  InternalCalls(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Int

  """Output value"""
  Output(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): Boolean

  """Signature fields"""
  Signature: EVM_Event_Fields_Call_Signature

  """Success value"""
  Success(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): Boolean

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Arguments fields"""
type EVM_Call_Fields_Arguments {
  """"""
  Index: Int

  """"""
  Name: String

  """"""
  Path: [EVM_Call_Fields_Arguments_Path]

  """"""
  Type: String

  """"""
  Value: EVM_ABI_Value_Union
}

"""Side fields"""
type EVM_DEXTradeByToken_Fields_Trade_Side {
  """Amount value"""
  Amount(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """Buyer value"""
  Buyer(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Currency fields"""
  Currency: EVM_DEXTradeByToken_Fields_Trade_Side_Currency

  """Ids value"""
  Ids(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_Side_Ids_Select_Trade_Side_Ids
  ): [String]

  """OrderId value"""
  OrderId(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Seller value"""
  Seller(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side
  ): EVM_DEXTradeByToken_Fields_Trade_Side_Trade_Side_Output

  """URIs value"""
  URIs(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_Side_URIs_Select_Trade_Side_URIs

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): [String]
}

"""Select by Signature"""
input EVM_Transaction_Input_Signature_InputType {
  """"""
  R: OLAP_BigInteger

  """"""
  V: OLAP_BigInteger

  """"""
  S: OLAP_BigInteger
}

"""Order by"""
input EVM_Transaction_Ordering {
  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: EVM_Transaction_EnumFields

  """Select a field to sort descending"""
  descending: EVM_Transaction_EnumFields
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Call_Input_Call_CallPath_Input_Call_CallPath {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""Signature fields"""
type EVM_Call_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """SignatureType value"""
  SignatureType(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): Boolean
}

"""Log fields"""
type EVM_Transfer_Fields_Log {
  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Signature fields"""
  Signature: EVM_Transfer_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String
}

"""Select by Side"""
input EVM_DEXTradeByToken_Input_Trade_Side_InputType {
  """"""
  Buyer: OLAP_String

  """"""
  Currency: EVM_DEXTradeByToken_Input_Trade_Side_Currency_InputType

  """"""
  Amount: EVM_Amount_With_Decimals

  """"""
  OrderId: OLAP_String

  """"""
  Seller: OLAP_String

  """"""
  URIs: EVM_DEXTradeByToken_Input_Trade_Side_URIs_Input_Trade_Side_URIs

  """"""
  Ids: EVM_DEXTradeByToken_Input_Trade_Side_Ids_Input_Trade_Side_Ids

  """"""
  Type: EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side
}

"""Select by Currency"""
input EVM_DEXTradeByToken_Input_Trade_Side_Currency_InputType {
  """"""
  SmartContract: OLAP_String

  """"""
  ProtocolName: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  Decimals: OLAP_Integer

  """"""
  HasURI: Boolean

  """"""
  Symbol: OLAP_String

  """"""
  Fungible: Boolean
}

"""Transaction_AccessList fields"""
type EVM_Transaction_Fields_Transaction_Transaction_AccessList {
  """"""
  Address: String

  """"""
  StorageKeys: [String]
}

"""Select by Block"""
input EVM_Event_Input_Block_InputType {
  """"""
  Coinbase: OLAP_String

  """"""
  L1: EVM_Event_Input_Block_L1_InputType

  """"""
  Time: OLAP_DateTime

  """"""
  Nonce: OLAP_BigInteger

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Difficulty: OLAP_BigInteger

  """"""
  ParentHash: OLAP_String

  """"""
  BaseFee: OLAP_BigInteger

  """"""
  Number: OLAP_BigInteger

  """"""
  Hash: OLAP_String

  """"""
  GasLimit: OLAP_BigInteger

  """"""
  Date: OLAP_Date
}

"""Uncle fields"""
type EVM_BalanceUpdate_Fields_Uncle {
  """Block fields"""
  Block: EVM_BalanceUpdate_Fields_Uncle_Block

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Select by Currency"""
input EVM_DEXTradeByToken_Input_Trade_Currency_InputType {
  """"""
  Fungible: Boolean

  """"""
  Symbol: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  Decimals: OLAP_Integer

  """"""
  HasURI: Boolean

  """"""
  SmartContract: OLAP_String

  """"""
  ProtocolName: OLAP_String
}

"""Listed names of numeric fields in a cube"""
enum EVM_Event_NumFields {
  """"""
  Transaction_GasFeeCap

  """"""
  Log_EnterIndex

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Call_Gas

  """"""
  Fee_Burnt

  """"""
  Fee_MinerReward

  """"""
  Transaction_Type

  """"""
  Fee_EffectiveGasPrice

  """"""
  Fee_Savings

  """"""
  Block_Number

  """"""
  Fee_GasRefund

  """"""
  Block_BaseFee

  """"""
  Transaction_Index

  """"""
  Call_CallerIndex

  """"""
  Block_GasUsed

  """"""
  Receipt_GasUsed

  """"""
  Receipt_Type

  """"""
  Log_Index

  """"""
  Receipt_Status

  """"""
  Transaction_Nonce

  """"""
  Block_GasLimit

  """"""
  Transaction_Cost

  """"""
  ChainId

  """"""
  Receipt_L1_GasPrice

  """"""
  Log_ExitIndex

  """"""
  Receipt_L1_Fee

  """"""
  Fee_SenderFee

  """"""
  Log_LogAfterCallIndex

  """"""
  Call_Value

  """"""
  Transaction_GasTipCap

  """"""
  Transaction_Value

  """"""
  Call_GasUsed

  """"""
  Transaction_GasPrice

  """"""
  Call_InternalCalls

  """"""
  Transaction_Gas

  """"""
  Log_Pc

  """"""
  Call_Index

  """"""
  Block_Difficulty

  """"""
  LogHeader_Index

  """"""
  Block_Nonce

  """"""
  Fee_PriorityFeePerGas

  """"""
  Transaction_Time
}

"""Select by Signature"""
input EVM_DEXTrade_Input_Call_Signature_InputType {
  """"""
  Name: OLAP_String

  """"""
  Parsed: Boolean

  """"""
  Abi: OLAP_String

  """"""
  SignatureType: Boolean

  """"""
  SignatureHash: OLAP_String

  """"""
  Signature: OLAP_String
}

"""Block fields"""
type EVM_Transfer_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_Transfer_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Array of Trade_Sell_URIs includes or excludes provided value"""
input EVM_DEXTrade_Input_Trade_Sell_URIs_Input_Trade_Sell_URIs {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Listed names of comparable fields in a cube"""
enum EVM_DEXTrade_CompareFields {
  """"""
  Call_GasUsed

  """"""
  Receipt_GasUsed

  """"""
  Block_GasLimit

  """"""
  Call_SelfDestruct

  """"""
  Fee_PriorityFeePerGas

  """"""
  Fee_GasRefund

  """"""
  Transaction_Type

  """"""
  Call_CallerIndex

  """"""
  Trade_Dex_Delegated

  """"""
  Trade_Buy_Price

  """"""
  Transaction_GasFeeCap

  """"""
  Trade_Success

  """"""
  Call_Success

  """"""
  Trade_Sell_Amount

  """"""
  Fee_MinerReward

  """"""
  Call_Create

  """"""
  Call_Signature_SignatureType

  """"""
  Fee_SenderFee

  """"""
  Fee_Savings

  """"""
  Trade_Dex_Pair_Decimals

  """"""
  Trade_Buy_Currency_Fungible

  """"""
  Transaction_Nonce

  """"""
  Call_Gas

  """"""
  Call_Index

  """"""
  Trade_Buy_Currency_Decimals

  """"""
  Transaction_Gas

  """"""
  Receipt_Type

  """"""
  Transaction_Time

  """"""
  Transaction_GasTipCap

  """"""
  Block_Number

  """"""
  Call_Reverted

  """"""
  Receipt_Status

  """"""
  Log_Signature_Parsed

  """"""
  Log_LogAfterCallIndex

  """"""
  Block_Date

  """"""
  Transaction_Protected

  """"""
  Block_GasUsed

  """"""
  Transaction_GasPrice

  """"""
  Receipt_L1_GasPrice

  """"""
  Trade_Sell_Currency_Fungible

  """"""
  Log_Index

  """"""
  TransactionStatus_Success

  """"""
  Call_InternalCalls

  """"""
  Block_Difficulty

  """"""
  Trade_Sell_Currency_HasURI

  """"""
  Transaction_Index

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Block_Nonce

  """"""
  Receipt_L1_Fee

  """"""
  Transaction_Cost

  """"""
  Trade_Sell_Currency_Decimals

  """"""
  Fee_Burnt

  """"""
  Fee_EffectiveGasPrice

  """"""
  Trade_Sell_Price

  """"""
  Call_Delegated

  """"""
  ChainId

  """"""
  Transaction_Value

  """"""
  Block_BaseFee

  """"""
  Trade_Buy_Amount

  """"""
  Log_Signature_SignatureType

  """"""
  Call_Signature_Parsed

  """"""
  Block_Time

  """"""
  Trade_Buy_Currency_HasURI

  """"""
  Call_Value
}

"""Select by L1"""
input EVM_Call_Input_Block_L1_InputType {
  """"""
  Coinbase: OLAP_String

  """"""
  ParentHash: OLAP_String

  """"""
  Hash: OLAP_String
}

"""Select by Log"""
input EVM_DEXTradeByToken_Input_Log_InputType {
  """"""
  LogAfterCallIndex: OLAP_Integer

  """"""
  SmartContract: OLAP_String

  """"""
  Signature: EVM_DEXTradeByToken_Input_Log_Signature_InputType

  """"""
  Index: OLAP_Integer
}

"""Listed names of fields in a cube"""
enum EVM_Transaction_EnumFields {
  """"""
  Transaction_GasPrice

  """"""
  Block_Number

  """"""
  Fee_Burnt

  """"""
  Transaction_Gas

  """"""
  Block_L1_Hash

  """"""
  Transaction_Value

  """"""
  Transaction_Cost

  """"""
  Block_Nonce

  """"""
  TransactionStatus_EndError

  """"""
  Transaction_AccessList

  """"""
  Transaction_Hash

  """"""
  Transaction_To

  """"""
  Fee_PriorityFeePerGas

  """"""
  Signature_V

  """"""
  Receipt_GasUsed

  """"""
  Transaction_GasFeeCap

  """"""
  Block_Date

  """"""
  Receipt_Status

  """"""
  Receipt_ContractAddress

  """"""
  Block_L1_Coinbase

  """"""
  Block_Difficulty

  """"""
  Transaction_From

  """"""
  Transaction_ToCode_Suicided

  """"""
  Block_ParentHash

  """"""
  Fee_SenderFee

  """"""
  Transaction_Nonce

  """"""
  Receipt_ContractAddressCode_Hash

  """"""
  Fee_Savings

  """"""
  Transaction_Type

  """"""
  Block_Hash

  """"""
  Transaction_ToCode_Size

  """"""
  TransactionStatus_Success

  """"""
  ChainId

  """"""
  Block_Coinbase

  """"""
  Receipt_PostState

  """"""
  Block_Time

  """"""
  Receipt_L1_Fee

  """"""
  Block_L1_ParentHash

  """"""
  Transaction_Index

  """"""
  Block_GasUsed

  """"""
  Signature_S

  """"""
  Fee_GasRefund

  """"""
  Fee_MinerReward

  """"""
  Transaction_CallCount

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Receipt_Bloom

  """"""
  Receipt_L1_GasPrice

  """"""
  Transaction_ToCode_Hash

  """"""
  TransactionStatus_FaultError

  """"""
  Signature_R

  """"""
  Receipt_Type

  """"""
  Transaction_Time

  """"""
  Block_GasLimit

  """"""
  Transaction_Data

  """"""
  Receipt_ContractAddressCode_Suicided

  """"""
  Fee_EffectiveGasPrice

  """"""
  Receipt_ContractAddressCode_Size

  """"""
  Transaction_GasTipCap

  """"""
  Block_BaseFee

  """"""
  Transaction_Protected
}

"""Selector for Topics"""
input EVM_Event_Input_Topics_Input_FieldSelector {
  """Select value for Hash"""
  Hash: OLAP_String
}

"""Order by"""
input EVM_Event_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_Event_EnumFields

  """Select a field to sort descending"""
  descending: EVM_Event_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Select by Pair"""
input EVM_DEXTrade_Input_Trade_Dex_Pair_InputType {
  """"""
  Symbol: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  SmartContract: OLAP_String

  """"""
  Decimals: OLAP_Integer
}

"""TransactionStatus fields"""
type EVM_Transfer_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): Boolean
}

"""Selector for Trade_Fees_Currency"""
input EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector_FieldSelector {
  """Select value for SmartContract"""
  SmartContract: OLAP_String

  """Select value for ProtocolName"""
  ProtocolName: OLAP_String

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String

  """Select value for Decimals"""
  Decimals: OLAP_Integer
}

"""Block fields"""
type EVM_Transaction_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date
  ): String

  """Difficulty value"""
  Difficulty(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_Transaction_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): DateTime
}

"""Listed names of fields in a cube"""
enum EVM_Block_EnumFields {
  """"""
  Block_Result_Errors

  """"""
  Block_L1_ParentHash

  """"""
  Block_L1_Hash

  """"""
  Block_Date

  """"""
  Block_TxHash

  """"""
  Block_BaseFee

  """"""
  Block_Result_Gas

  """"""
  Block_GasUsed

  """"""
  Block_L1_Coinbase

  """"""
  Block_ParentHash

  """"""
  Block_ReceiptHash

  """"""
  Block_MixDigest

  """"""
  Block_GasLimit

  """"""
  Block_UnclesCount

  """"""
  Block_Coinbase

  """"""
  Block_L1_BatcherAddr

  """"""
  Block_Nonce

  """"""
  Block_Bloom

  """"""
  Block_TxCount

  """"""
  Block_Extra

  """"""
  Block_Root

  """"""
  Block_UncleHash

  """"""
  Block_Hash

  """"""
  Block_Time

  """"""
  Block_Number

  """"""
  Block_Difficulty

  """"""
  ChainId

  """"""
  Block_L1_BaseFee
}

"""Amount with decimals"""
input EVM_Amount_With_Decimals {
  """Less than the amount"""
  le: String

  """Greater or equal the amount"""
  gt: String

  """Less or equal the amount"""
  lt: String

  """Equal to amount"""
  eq: String

  """Not equal to amount"""
  ne: String

  """Greater than the amount"""
  ge: String
}

"""Selector for StateChanges"""
input EVM_Call_Input_StateChanges_Input_FieldSelector {
  """Select value for ChangeAfterCallIndex"""
  ChangeAfterCallIndex: OLAP_Integer

  """Select value for Address"""
  Address: OLAP_String

  """Select value for Location"""
  Location: OLAP_String

  """Select value for Value"""
  Value: OLAP_String
}

"""Limit definition"""
input EVM_BalanceUpdate_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Select filters for Trade_Side"""
input EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side {
  """Exact match"""
  is: EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input

  """Not this"""
  not: EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input

  """One of the values"""
  in: [EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input]

  """Not one of the values"""
  notIn: [EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input]
}

""""""
input EVM_Event_Filter {
  """Select by Transaction"""
  Transaction: EVM_Event_Input_Transaction_InputType

  """Select by LogHeader"""
  LogHeader: EVM_Event_Input_LogHeader_InputType

  """Array of Arguments includes or excludes provided value"""
  Arguments: EVM_Event_Input_Arguments_Input_Arguments

  """Select by Call"""
  Call: EVM_Event_Input_Call_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Event_Input_TransactionStatus_InputType

  """Array of Topics includes or excludes provided value"""
  Topics: EVM_Event_Input_Topics_Input_Topics

  """Select by Block"""
  Block: EVM_Event_Input_Block_InputType

  """Select by Receipt"""
  Receipt: EVM_Event_Input_Receipt_InputType

  """Select by Log"""
  Log: EVM_Event_Input_Log_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Fee"""
  Fee: EVM_Event_Input_Fee_InputType
}

"""LogHeader fields"""
type EVM_Event_Fields_LogHeader {
  """Address value"""
  Address(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """Removed value"""
  Removed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Order by"""
input EVM_Uncle_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_Uncle_EnumFields

  """Select a field to sort descending"""
  descending: EVM_Uncle_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""LimitBy definition"""
input EVM_Transfer_LimitBy {
  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_Transfer_EnumFields]

  """Max count in results"""
  count: Int = 0
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Event_Input_Call_CallPath_Input_Call_CallPath {
  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]
}

"""Log fields"""
type EVM_Event_Fields_Log {
  """EnterIndex value"""
  EnterIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """ExitIndex value"""
  ExitIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): Int

  """Pc value"""
  Pc(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Signature fields"""
  Signature: EVM_Event_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String
}

"""Receipt fields"""
type EVM_Transaction_Fields_Receipt {
  """Bloom value"""
  Bloom(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """ContractAddress value"""
  ContractAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ContractAddressCode fields"""
  ContractAddressCode: EVM_Transaction_Fields_Receipt_ContractAddressCode

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """L1 fields"""
  L1: EVM_Transaction_Fields_Receipt_L1

  """PostState value"""
  PostState(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Select by Trade"""
input EVM_DEXTrade_Input_Trade_InputType {
  """"""
  Buy: EVM_DEXTrade_Input_Trade_Buy_InputType

  """"""
  Dex: EVM_DEXTrade_Input_Trade_Dex_InputType

  """"""
  Fees: EVM_DEXTrade_Input_Trade_Fees_Input_Trade_Fees

  """"""
  Success: Boolean

  """"""
  Sell: EVM_DEXTrade_Input_Trade_Sell_InputType

  """"""
  Sender: OLAP_String
}

"""Array of Returns includes or excludes provided value"""
input EVM_Call_Fields_Returns_Select_Returns {
  """Ends with this element"""
  endsWith: [EVM_Call_Fields_Returns_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Fields_Returns_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Fields_Returns_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Fields_Returns_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Fields_Returns_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Fields_Returns_Select_FieldSelector]
}

"""LimitBy definition"""
input EVM_BalanceUpdate_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_BalanceUpdate_EnumFields]
}

"""Dex fields"""
type EVM_DEXTradeByToken_Fields_Trade_Dex {
  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """OwnerAddress value"""
  OwnerAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Pair fields"""
  Pair: EVM_DEXTradeByToken_Fields_Trade_Dex_Pair

  """ProtocolFamily value"""
  ProtocolFamily(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolVersion value"""
  ProtocolVersion(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Array of Trade_Side_Ids includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Trade_Side_Ids_Select_Trade_Side_Ids {
  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]
}

"""Dex fields"""
type EVM_DEXTrade_Fields_Trade_Dex {
  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """OwnerAddress value"""
  OwnerAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Pair fields"""
  Pair: EVM_DEXTrade_Fields_Trade_Dex_Pair

  """ProtocolFamily value"""
  ProtocolFamily(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolVersion value"""
  ProtocolVersion(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Select by Block"""
input EVM_Call_Input_Block_InputType {
  """"""
  Coinbase: OLAP_String

  """"""
  GasLimit: OLAP_BigInteger

  """"""
  L1: EVM_Call_Input_Block_L1_InputType

  """"""
  Number: OLAP_BigInteger

  """"""
  Difficulty: OLAP_BigInteger

  """"""
  Time: OLAP_DateTime

  """"""
  Date: OLAP_Date

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Hash: OLAP_String

  """"""
  ParentHash: OLAP_String

  """"""
  BaseFee: OLAP_BigInteger

  """"""
  Nonce: OLAP_BigInteger
}

"""Select by Block"""
input EVM_BalanceUpdate_Input_Block_InputType {
  """"""
  L1: EVM_BalanceUpdate_Input_Block_L1_InputType

  """"""
  Hash: OLAP_String

  """"""
  Time: OLAP_DateTime

  """"""
  Number: OLAP_BigInteger

  """"""
  Date: OLAP_Date

  """"""
  ParentHash: OLAP_String
}

"""StateChanges fields"""
type EVM_Call_Fields_StateChanges {
  """"""
  Address: String

  """"""
  ChangeAfterCallIndex: Int

  """"""
  Location: String

  """"""
  Value: String
}

"""Array of Trade_Fees includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Trade_Fees_Input_Trade_Fees {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_DEXTradeByToken_Input_Trade_Fees_Input_FieldSelector]
}

"""Arguments_Path fields"""
type EVM_Event_Fields_Arguments_Path {
  """"""
  Index: Int

  """"""
  Name: String

  """"""
  Type: String
}

"""Select by L1"""
input EVM_DEXTrade_Input_Block_L1_InputType {
  """"""
  Hash: OLAP_String

  """"""
  ParentHash: OLAP_String
}

"""Order by"""
input EVM_DEXTrade_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_DEXTrade_EnumFields

  """Select a field to sort descending"""
  descending: EVM_DEXTrade_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Select by Currency"""
input EVM_TokenHolder_Input_Currency_InputType {
  """"""
  Decimals: OLAP_Integer

  """"""
  SmartContract: OLAP_String

  """"""
  Fungible: Boolean

  """"""
  Delegated: Boolean

  """"""
  DelegatedTo: OLAP_String

  """"""
  ProtocolName: OLAP_String

  """"""
  Native: Boolean

  """"""
  Symbol: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  HasURI: Boolean
}

"""Transaction fields"""
type EVM_Call_Fields_Transaction {
  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """Index value"""
  Index(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Nonce value"""
  Nonce(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Protected value"""
  Protected(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Type value"""
  Type(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Transaction fields"""
type EVM_Transaction_Fields_Transaction {
  """AccessList value"""
  AccessList(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Transaction_Fields_Transaction_AccessList_Select_Transaction_AccessList
  ): [EVM_Transaction_Fields_Transaction_Transaction_AccessList]

  """CallCount value"""
  CallCount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): Int

  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasPrice value"""
  GasPrice(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Nonce value"""
  Nonce(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """Protected value"""
  Protected(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """To value"""
  To(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """ToCode fields"""
  ToCode: EVM_Transaction_Fields_Transaction_ToCode

  """Type value"""
  Type(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Signature fields"""
type EVM_Transfer_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): Boolean

  """Signature value"""
  Signature(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Currency fields"""
type EVM_DEXTradeByToken_Fields_Trade_Side_Currency {
  """Decimals value"""
  Decimals(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): Boolean

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Select by Block"""
input EVM_Transaction_Input_Block_InputType {
  """"""
  Hash: OLAP_String

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Difficulty: OLAP_BigInteger

  """"""
  GasLimit: OLAP_BigInteger

  """"""
  Date: OLAP_Date

  """"""
  Nonce: OLAP_BigInteger

  """"""
  ParentHash: OLAP_String

  """"""
  Coinbase: OLAP_String

  """"""
  Number: OLAP_BigInteger

  """"""
  L1: EVM_Transaction_Input_Block_L1_InputType

  """"""
  Time: OLAP_DateTime

  """"""
  BaseFee: OLAP_BigInteger
}

"""Select value of attributes"""
input EVM_ValueUnionSelector {
  """Selector of BigInteger values"""
  BigInteger: OLAP_BigInteger

  """Selector of Address values"""
  Address: OLAP_String

  """Selector of String values"""
  String: OLAP_String

  """Selector of Boolean values"""
  Boolean: Boolean

  """Selector of Unsigned Integer values"""
  UnsignedInteger: OLAP_Integer

  """Selector of Signed Integer values"""
  SignedInteger: OLAP_Integer

  """Selector of Bytes values"""
  Bytes: OLAP_String
}

"""Fee fields"""
type EVM_Event_Fields_Fee {
  """Burnt value"""
  Burnt(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasRefund value"""
  GasRefund(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """MinerReward value"""
  MinerReward(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Savings value"""
  Savings(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFee value"""
  SenderFee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String
}

"""Currency fields"""
type EVM_TokenHolder_Fields_Currency {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): String

  """Native value"""
  Native(
    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields
  ): String

  """Symbol value"""
  Symbol(
    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): String
}

"""Blockchain network selection"""
enum evm_network {
  """Binance Smart Chain Mainnet"""
  bsc

  """Ethereum Mainnet"""
  eth

  """Arbitrum Mainnet"""
  arbitrum

  """Optimism Mainnet"""
  optimism
}

"""Limit definition"""
input EVM_Event_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Select by Uncle"""
input EVM_BalanceUpdate_Input_Uncle_InputType {
  """"""
  Block: EVM_BalanceUpdate_Input_Uncle_Block_InputType

  """"""
  Index: OLAP_Integer
}

"""Listed names of numeric fields in a cube"""
enum EVM_BalanceUpdate_NumFields {
  """"""
  Transaction_Time

  """"""
  Transaction_Index

  """"""
  ChainId

  """"""
  BalanceUpdate_Amount

  """"""
  BalanceUpdate_Id

  """"""
  Uncle_Block_Number

  """"""
  Currency_Decimals

  """"""
  Call_Index

  """"""
  Log_Index

  """"""
  Uncle_Index

  """"""
  Block_Number

  """"""
  Log_LogAfterCallIndex
}

"""Select by Log"""
input EVM_Transfer_Input_Log_InputType {
  """"""
  Signature: EVM_Transfer_Input_Log_Signature_InputType

  """"""
  SmartContract: OLAP_String

  """"""
  Index: OLAP_Integer

  """"""
  LogAfterCallIndex: OLAP_Integer
}

"""Select by L1"""
input EVM_Transaction_Input_Block_L1_InputType {
  """"""
  Hash: OLAP_String

  """"""
  Coinbase: OLAP_String

  """"""
  ParentHash: OLAP_String
}

"""Listed names of fields in a cube"""
enum EVM_MinerReward_EnumFields {
  """"""
  Block_TxCount

  """"""
  Block_Result_Gas

  """"""
  Block_TxHash

  """"""
  Block_ParentHash

  """"""
  Block_GasLimit

  """"""
  Block_L1_ParentHash

  """"""
  Uncle_Block_ReceiptHash

  """"""
  Block_Extra

  """"""
  Block_ReceiptHash

  """"""
  Block_Nonce

  """"""
  Uncle_Block_Number

  """"""
  Reward_Static

  """"""
  Reward_BurntFees

  """"""
  Block_MixDigest

  """"""
  Reward_Total

  """"""
  Block_Date

  """"""
  Uncle_Block_Root

  """"""
  Uncle_Block_Date

  """"""
  Uncle_Block_Bloom

  """"""
  Uncle_Block_Nonce

  """"""
  Block_Bloom

  """"""
  Reward_Uncle

  """"""
  Block_Number

  """"""
  Uncle_Block_Coinbase

  """"""
  Block_BaseFee

  """"""
  Uncle_Block_BaseFee

  """"""
  Block_Hash

  """"""
  Uncle_Index

  """"""
  Reward_TxFees

  """"""
  ChainId

  """"""
  Block_L1_Coinbase

  """"""
  Block_Coinbase

  """"""
  Uncle_Block_Difficulty

  """"""
  Uncle_Block_GasLimit

  """"""
  Block_Difficulty

  """"""
  Block_Root

  """"""
  Uncle_Block_Time

  """"""
  Block_L1_BaseFee

  """"""
  Uncle_Block_ParentHash

  """"""
  Block_L1_Hash

  """"""
  Uncle_Block_TxHash

  """"""
  Block_Time

  """"""
  Uncle_Block_GasUsed

  """"""
  Block_UnclesCount

  """"""
  Block_UncleHash

  """"""
  Uncle_Block_Extra

  """"""
  Uncle_Block_UncleHash

  """"""
  Reward_Dynamic

  """"""
  Uncle_Block_MixDigest

  """"""
  Uncle_Block_Hash

  """"""
  Block_GasUsed

  """"""
  Block_Result_Errors
}

"""Smart contract calls in EVM Blockchain"""
type EVM_Call_Cube {
  """Arguments value"""
  Arguments(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Call_Fields_Arguments_Select_Arguments
  ): [EVM_Call_Fields_Arguments]

  """Block fields"""
  Block: EVM_Call_Fields_Block

  """Call fields"""
  Call: EVM_Call_Fields_Call

  """ChainId value"""
  ChainId(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Fee fields"""
  Fee: EVM_Call_Fields_Fee

  """Receipt fields"""
  Receipt: EVM_Call_Fields_Receipt

  """Returns value"""
  Returns(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Call_Fields_Returns_Select_Returns

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): [EVM_Call_Fields_Returns]

  """StateChanges value"""
  StateChanges(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Call_Fields_StateChanges_Select_StateChanges

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): [EVM_Call_Fields_StateChanges]

  """Transaction fields"""
  Transaction: EVM_Call_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_Call_Fields_TransactionStatus

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Call_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Call_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_Call_EnumFields]

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """First argument for Covariance between two arguments"""
    of: EVM_Call_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Call_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Call_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Call_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """Argument for Dispersion for a set of values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Argument for Entropy for a set of values"""
    of: EVM_Call_NumFields!
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_Call_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """Argument for nakamoto index"""
    of: EVM_Call_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_Call_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Call_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_Call_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Call_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Call_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Call_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_Call_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""TransactionStatus fields"""
type EVM_Call_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Select by Transaction"""
input EVM_DEXTrade_Input_Transaction_InputType {
  """"""
  To: OLAP_String

  """"""
  Protected: Boolean

  """"""
  Hash: OLAP_String

  """"""
  Time: OLAP_BigInteger

  """"""
  Index: OLAP_Integer

  """"""
  Nonce: OLAP_BigInteger

  """"""
  GasPrice: EVM_Amount_With_Decimals

  """"""
  Gas: OLAP_BigInteger

  """"""
  Cost: EVM_Amount_With_Decimals

  """"""
  GasTipCap: EVM_Amount_With_Decimals

  """"""
  Value: EVM_Amount_With_Decimals

  """"""
  From: OLAP_String

  """"""
  Type: OLAP_Integer

  """"""
  GasFeeCap: EVM_Amount_With_Decimals
}

"""L1 fields"""
type EVM_DEXTrade_Fields_Block_L1 {
  """Hash value"""
  Hash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String
}

"""Select by Fee"""
input EVM_Event_Input_Fee_InputType {
  """"""
  SenderFee: EVM_Amount_With_Decimals

  """"""
  Savings: EVM_Amount_With_Decimals

  """"""
  MinerReward: EVM_Amount_With_Decimals

  """"""
  GasRefund: OLAP_BigInteger

  """"""
  EffectiveGasPrice: EVM_Amount_With_Decimals

  """"""
  Burnt: EVM_Amount_With_Decimals

  """"""
  PriorityFeePerGas: EVM_Amount_With_Decimals
}

"""Topics fields"""
type EVM_Event_Fields_Topics {
  """"""
  Hash: String
}

"""Select by Block"""
input EVM_MinerReward_Input_Block_InputType {
  """"""
  ParentHash: OLAP_String

  """"""
  MixDigest: OLAP_String

  """"""
  Root: OLAP_String

  """"""
  UncleHash: OLAP_String

  """"""
  Hash: OLAP_String

  """"""
  Extra: OLAP_String

  """"""
  Number: OLAP_BigInteger

  """"""
  TxCount: OLAP_Integer

  """"""
  Difficulty: OLAP_BigInteger

  """"""
  Time: OLAP_DateTime

  """"""
  GasLimit: OLAP_BigInteger

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  UnclesCount: OLAP_Integer

  """"""
  Nonce: OLAP_BigInteger

  """"""
  Date: OLAP_Date

  """"""
  ReceiptHash: OLAP_String

  """"""
  Bloom: OLAP_String

  """"""
  BaseFee: EVM_Amount_With_Decimals

  """"""
  Coinbase: OLAP_String

  """"""
  Result: EVM_MinerReward_Input_Block_Result_InputType

  """"""
  TxHash: OLAP_String

  """"""
  L1: EVM_MinerReward_Input_Block_L1_InputType
}

"""Receipt fields"""
type EVM_Event_Fields_Receipt {
  """ContractAddress value"""
  ContractAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """L1 fields"""
  L1: EVM_Event_Fields_Receipt_L1

  """Status value"""
  Status(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Select by Reward"""
input EVM_MinerReward_Input_Reward_InputType {
  """"""
  Total: EVM_Amount_With_Decimals

  """"""
  BurntFees: EVM_Amount_With_Decimals

  """"""
  Static: EVM_Amount_With_Decimals

  """"""
  Dynamic: EVM_Amount_With_Decimals

  """"""
  Uncle: EVM_Amount_With_Decimals

  """"""
  TxFees: EVM_Amount_With_Decimals
}

"""Enumeration for Transfer_Type"""
enum EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type_Input {
  """Transfer_Type token"""
  token

  """Transfer_Type transaction"""
  transaction

  """Transfer_Type call"""
  call
}

"""Listed names of comparable fields in a cube"""
enum EVM_BalanceUpdate_CompareFields {
  """"""
  Block_Date

  """"""
  ChainId

  """"""
  Currency_Decimals

  """"""
  Transaction_Time

  """"""
  Block_Time

  """"""
  Currency_HasURI

  """"""
  Call_Index

  """"""
  Currency_Delegated

  """"""
  Log_LogAfterCallIndex

  """"""
  Log_Index

  """"""
  Transaction_Index

  """"""
  Uncle_Index

  """"""
  Currency_Native

  """"""
  BalanceUpdate_Id

  """"""
  Uncle_Block_Number

  """"""
  BalanceUpdate_Amount

  """"""
  Currency_Fungible

  """"""
  Block_Number
}

"""Select by Result"""
input EVM_Block_Input_Block_Result_InputType {
  """"""
  Errors: OLAP_String

  """"""
  Gas: OLAP_BigInteger
}

"""Trade_Fees fields"""
type EVM_DEXTradeByToken_Fields_Trade_Trade_Fees {
  """"""
  Amount: String

  """"""
  Currency: EVM_DEXTradeByToken_Fields_Trade_Trade_Fees_Currency

  """"""
  Payer: String

  """"""
  Recipient: String
}

"""Select by Log"""
input EVM_Event_Input_Log_InputType {
  """"""
  Signature: EVM_Event_Input_Log_Signature_InputType

  """"""
  EnterIndex: OLAP_Integer

  """"""
  Index: OLAP_Integer

  """"""
  ExitIndex: OLAP_Integer

  """"""
  LogAfterCallIndex: OLAP_Integer

  """"""
  Pc: OLAP_BigInteger

  """"""
  SmartContract: OLAP_String
}

"""Fee fields"""
type EVM_DEXTradeByToken_Fields_Fee {
  """Burnt value"""
  Burnt(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """GasRefund value"""
  GasRefund(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """MinerReward value"""
  MinerReward(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """Savings value"""
  Savings(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFee value"""
  SenderFee(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Array of Arguments_Path includes or excludes provided value"""
input EVM_Event_Input_Arguments_Input_FieldSelector_Arguments_Path {
  """Does not End with this element"""
  notEndsWith: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector]
}

"""Array of Trade_Buy_Ids includes or excludes provided value"""
input EVM_DEXTrade_Input_Trade_Buy_Ids_Input_Trade_Buy_Ids {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]
}

"""L1 fields"""
type EVM_BalanceUpdate_Fields_Block_L1 {
  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Result fields"""
type EVM_MinerReward_Fields_Block_Result {
  """Errors value"""
  Errors(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""Signature fields"""
type EVM_DEXTrade_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): Boolean

  """Signature value"""
  Signature(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureType value"""
  SignatureType(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Int
}

"""Array of Arguments_Path includes or excludes provided value"""
input EVM_Call_Input_Arguments_Input_FieldSelector_Arguments_Path {
  """Ends with this element"""
  endsWith: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Input_Arguments_Input_FieldSelector_FieldSelector]
}

"""Select by Currency"""
input EVM_DEXTrade_Input_Trade_Buy_Currency_InputType {
  """"""
  Symbol: OLAP_String

  """"""
  SmartContract: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  ProtocolName: OLAP_String

  """"""
  HasURI: Boolean

  """"""
  Decimals: OLAP_Integer

  """"""
  Fungible: Boolean
}

"""Receipt fields"""
type EVM_DEXTrade_Fields_Receipt {
  """ContractAddress value"""
  ContractAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """L1 fields"""
  L1: EVM_DEXTrade_Fields_Receipt_L1

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""L1 fields"""
type EVM_Transaction_Fields_Block_L1 {
  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String
}

"""Array of Topics includes or excludes provided value"""
input EVM_Event_Input_Topics_Input_Topics {
  """Ends with this element"""
  endsWith: [EVM_Event_Input_Topics_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Event_Input_Topics_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Input_Topics_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Event_Input_Topics_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Input_Topics_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Input_Topics_Input_FieldSelector]
}

"""Listed names of comparable fields in a cube"""
enum EVM_Event_CompareFields {
  """"""
  Call_InternalCalls

  """"""
  Transaction_Type

  """"""
  Call_Index

  """"""
  Log_ExitIndex

  """"""
  Block_Nonce

  """"""
  Fee_SenderFee

  """"""
  Log_Index

  """"""
  Log_Signature_Parsed

  """"""
  Call_GasUsed

  """"""
  Block_Time

  """"""
  Call_Success

  """"""
  Transaction_Protected

  """"""
  Receipt_L1_GasPrice

  """"""
  Transaction_Time

  """"""
  Transaction_GasTipCap

  """"""
  Call_SelfDestruct

  """"""
  Fee_PriorityFeePerGas

  """"""
  Call_Signature_SignatureType

  """"""
  Block_GasLimit

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Block_GasUsed

  """"""
  Transaction_GasPrice

  """"""
  Log_LogAfterCallIndex

  """"""
  Fee_Savings

  """"""
  Receipt_Type

  """"""
  Call_Create

  """"""
  Receipt_GasUsed

  """"""
  Transaction_GasFeeCap

  """"""
  LogHeader_Index

  """"""
  Receipt_L1_Fee

  """"""
  Call_Signature_Parsed

  """"""
  Log_Signature_SignatureType

  """"""
  Transaction_Cost

  """"""
  ChainId

  """"""
  Fee_MinerReward

  """"""
  Transaction_Index

  """"""
  Call_Delegated

  """"""
  Transaction_Value

  """"""
  Transaction_Nonce

  """"""
  Block_Date

  """"""
  Transaction_Gas

  """"""
  Fee_Burnt

  """"""
  Call_CallerIndex

  """"""
  Log_Pc

  """"""
  Block_Number

  """"""
  Call_Reverted

  """"""
  TransactionStatus_Success

  """"""
  Block_BaseFee

  """"""
  Receipt_Status

  """"""
  Call_Gas

  """"""
  Call_Value

  """"""
  Fee_EffectiveGasPrice

  """"""
  Block_Difficulty

  """"""
  Fee_GasRefund

  """"""
  Log_EnterIndex

  """"""
  LogHeader_Removed
}

"""Union Type for argument values"""
union EVM_ABI_Value_Union = EVM_ABI_Integer_Value_Arg | EVM_ABI_String_Value_Arg | EVM_ABI_Address_Value_Arg | EVM_ABI_BigInt_Value_Arg | EVM_ABI_Bytes_Value_Arg | EVM_ABI_Boolean_Value_Arg

"""Selector for Transaction_AccessList"""
input EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector {
  """Select value for Address"""
  Address: OLAP_String

  """Select value for StorageKeys"""
  StorageKeys: EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector_Transaction_AccessList_StorageKeys
}

"""Signature fields"""
type EVM_Event_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""DEX Trades in EVM Blockchain"""
type EVM_DEXTrade_Cube {
  """Block fields"""
  Block: EVM_DEXTrade_Fields_Block

  """Call fields"""
  Call: EVM_DEXTrade_Fields_Call

  """ChainId value"""
  ChainId(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Fee fields"""
  Fee: EVM_DEXTrade_Fields_Fee

  """Log fields"""
  Log: EVM_DEXTrade_Fields_Log

  """Receipt fields"""
  Receipt: EVM_DEXTrade_Fields_Receipt

  """Trade fields"""
  Trade: EVM_DEXTrade_Fields_Trade

  """Transaction fields"""
  Transaction: EVM_DEXTrade_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_DEXTrade_Fields_TransactionStatus

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_DEXTrade_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_DEXTrade_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Count distinct values of the field"""
    distinct: [EVM_DEXTrade_EnumFields]
  ): String

  """Covariance between two arguments"""
  covariance(
    """Second argument for Covariance between two arguments"""
    with: EVM_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_DEXTrade_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_DEXTrade_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_DEXTrade_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_DEXTrade_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_DEXTrade_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """Argument for Dispersion for a set of values"""
    of: EVM_DEXTrade_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Argument for Entropy for a set of values"""
    of: EVM_DEXTrade_NumFields!
  ): Float

  """Gini factor of argument"""
  gini(
    """Argument for gini"""
    of: EVM_DEXTrade_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_DEXTrade_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_DEXTrade_NumFields!
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_DEXTrade_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_DEXTrade_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_DEXTrade_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_DEXTrade_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_DEXTrade_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_DEXTrade_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_DEXTrade_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Enumeration for BalanceUpdate_Type"""
enum EVM_BalanceUpdate_Input_BalanceUpdate_Type_Input_BalanceUpdate_Type_Input {
  """BalanceUpdate_Type fee"""
  fee

  """BalanceUpdate_Type block_reward"""
  block_reward

  """BalanceUpdate_Type uncle_reward"""
  uncle_reward

  """BalanceUpdate_Type genesis"""
  genesis

  """BalanceUpdate_Type other"""
  other

  """BalanceUpdate_Type transfer"""
  transfer
}

"""Array of Trade_Side_Ids includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Trade_Side_Ids_Input_Trade_Side_Ids {
  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]
}

"""Array of Trade_URIs includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Trade_URIs_Input_Trade_URIs {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Currency fields"""
type EVM_DEXTradeByToken_Fields_Trade_Currency {
  """Decimals value"""
  Decimals(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Boolean

  """Name value"""
  Name(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_DEXTrade_Input_Call_CallPath_Input_Call_CallPath {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""Uncle fields"""
type EVM_Uncle_Fields_Uncle {
  """Block fields"""
  Block: EVM_Uncle_Fields_Uncle_Block

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Int
}

"""Order by"""
input EVM_DEXTradeByToken_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_DEXTradeByToken_EnumFields

  """Select a field to sort descending"""
  descending: EVM_DEXTradeByToken_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Select by Block"""
input EVM_MinerReward_Input_Uncle_Block_InputType {
  """"""
  Time: OLAP_DateTime

  """"""
  ParentHash: OLAP_String

  """"""
  Number: OLAP_BigInteger

  """"""
  Extra: OLAP_String

  """"""
  UncleHash: OLAP_String

  """"""
  Root: OLAP_String

  """"""
  Hash: OLAP_String

  """"""
  Coinbase: OLAP_String

  """"""
  Date: OLAP_Date

  """"""
  Bloom: OLAP_String

  """"""
  ReceiptHash: OLAP_String

  """"""
  Nonce: OLAP_BigInteger

  """"""
  Difficulty: OLAP_BigInteger

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  BaseFee: EVM_Amount_With_Decimals

  """"""
  MixDigest: OLAP_String

  """"""
  TxHash: OLAP_String

  """"""
  GasLimit: OLAP_BigInteger
}

""""""
input EVM_Block_Filter {
  """Select by Block"""
  Block: EVM_Block_Input_Block_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger
}

"""Select by Pair"""
input EVM_DEXTradeByToken_Input_Trade_Dex_Pair_InputType {
  """"""
  Symbol: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  Decimals: OLAP_Integer

  """"""
  SmartContract: OLAP_String
}

"""Arguments fields"""
type EVM_Event_Fields_Arguments {
  """"""
  Index: Int

  """"""
  Name: String

  """"""
  Path: [EVM_Event_Fields_Arguments_Path]

  """"""
  Type: String

  """"""
  Value: EVM_ABI_Value_Union
}

""""""
type EVM_ABI_Integer_Value_Arg {
  """"""
  integer: Int
}

""""""
type EVM_ABI_BigInt_Value_Arg {
  """"""
  bigInteger: String
}

"""Receipt fields"""
type EVM_Call_Fields_Receipt {
  """ContractAddress value"""
  ContractAddress(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """L1 fields"""
  L1: EVM_Call_Fields_Receipt_L1

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Select by TransactionStatus"""
input EVM_Transfer_Input_TransactionStatus_InputType {
  """"""
  EndError: OLAP_String

  """"""
  FaultError: OLAP_String

  """"""
  Success: Boolean
}

"""LimitBy definition"""
input EVM_DEXTradeByToken_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_DEXTradeByToken_EnumFields]
}

"""Order by"""
input EVM_MinerReward_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_MinerReward_EnumFields

  """Select a field to sort descending"""
  descending: EVM_MinerReward_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Select by Sell"""
input EVM_DEXTrade_Input_Trade_Sell_InputType {
  """"""
  Seller: OLAP_String

  """"""
  Buyer: OLAP_String

  """"""
  Ids: EVM_DEXTrade_Input_Trade_Sell_Ids_Input_Trade_Sell_Ids

  """"""
  URIs: EVM_DEXTrade_Input_Trade_Sell_URIs_Input_Trade_Sell_URIs

  """"""
  OrderId: OLAP_String

  """"""
  Amount: EVM_Amount_With_Decimals

  """"""
  Price: OLAP_Float

  """"""
  Currency: EVM_DEXTrade_Input_Trade_Sell_Currency_InputType
}

"""Select by Block"""
input EVM_Uncle_Input_Uncle_Block_InputType {
  """"""
  GasUsed: OLAP_BigInteger

  """"""
  ReceiptHash: OLAP_String

  """"""
  GasLimit: OLAP_BigInteger

  """"""
  UncleHash: OLAP_String

  """"""
  Difficulty: OLAP_BigInteger

  """"""
  ParentHash: OLAP_String

  """"""
  Coinbase: OLAP_String

  """"""
  Date: OLAP_Date

  """"""
  Hash: OLAP_String

  """"""
  BaseFee: EVM_Amount_With_Decimals

  """"""
  Number: OLAP_BigInteger

  """"""
  Time: OLAP_DateTime

  """"""
  MixDigest: OLAP_String

  """"""
  Nonce: OLAP_BigInteger

  """"""
  Root: OLAP_String

  """"""
  TxHash: OLAP_String

  """"""
  Extra: OLAP_String

  """"""
  Bloom: OLAP_String
}

"""Array of Topics includes or excludes provided value"""
input EVM_Event_Fields_Topics_Select_Topics {
  """Does not start with this element"""
  notStartsWith: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Fields_Topics_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Event_Fields_Topics_Select_FieldSelector]
}

"""L1 fields"""
type EVM_Call_Fields_Block_L1 {
  """Coinbase value"""
  Coinbase(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

""""""
input EVM_DEXTradeByToken_Filter {
  """Select by Transaction"""
  Transaction: EVM_DEXTradeByToken_Input_Transaction_InputType

  """Select by Log"""
  Log: EVM_DEXTradeByToken_Input_Log_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_DEXTradeByToken_Input_TransactionStatus_InputType

  """Select by Call"""
  Call: EVM_DEXTradeByToken_Input_Call_InputType

  """Select by Receipt"""
  Receipt: EVM_DEXTradeByToken_Input_Receipt_InputType

  """Select by Trade"""
  Trade: EVM_DEXTradeByToken_Input_Trade_InputType

  """Select by Block"""
  Block: EVM_DEXTradeByToken_Input_Block_InputType

  """Select by Fee"""
  Fee: EVM_DEXTradeByToken_Input_Fee_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger
}

"""Select by ToCode"""
input EVM_Transaction_Input_Transaction_ToCode_InputType {
  """"""
  Suicided: Boolean

  """"""
  Size: OLAP_Integer

  """"""
  Hash: OLAP_String
}

"""Array of Arguments_Path includes or excludes provided value"""
input EVM_Event_Fields_Arguments_Select_FieldSelector_Arguments_Path {
  """Starts with this element"""
  startsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Fields_Arguments_Select_FieldSelector_FieldSelector]
}

"""Array of Trade_Fees includes or excludes provided value"""
input EVM_DEXTrade_Input_Trade_Fees_Input_Trade_Fees {
  """Includes this element"""
  includes: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Transfer_Input_Call_CallPath_Input_Call_CallPath {
  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]
}

"""Select by Signature"""
input EVM_Event_Input_Call_Signature_InputType {
  """"""
  Signature: OLAP_String

  """"""
  Parsed: Boolean

  """"""
  Name: OLAP_String

  """"""
  Abi: OLAP_String

  """"""
  SignatureType: Boolean

  """"""
  SignatureHash: OLAP_String
}

"""Enumeration for BalanceUpdate_Type"""
enum EVM_BalanceUpdate_Fields_BalanceUpdate_BalanceUpdate_Type_Output {
  """BalanceUpdate_Type transfer"""
  transfer

  """BalanceUpdate_Type fee"""
  fee

  """BalanceUpdate_Type block_reward"""
  block_reward

  """BalanceUpdate_Type uncle_reward"""
  uncle_reward

  """BalanceUpdate_Type genesis"""
  genesis

  """BalanceUpdate_Type other"""
  other
}

"""Select by TransactionStatus"""
input EVM_DEXTradeByToken_Input_TransactionStatus_InputType {
  """"""
  EndError: OLAP_String

  """"""
  FaultError: OLAP_String

  """"""
  Success: Boolean
}

"""Select by Call"""
input EVM_Call_Input_Call_InputType {
  """"""
  Success: Boolean

  """"""
  ExitIndex: OLAP_Integer

  """"""
  CallerIndex: OLAP_Integer

  """"""
  Value: EVM_Amount_With_Decimals

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Opcode: EVM_Call_Input_Call_Opcode_InputType

  """"""
  Depth: OLAP_Integer

  """"""
  LogCount: OLAP_Integer

  """"""
  Delegated: Boolean

  """"""
  To: OLAP_String

  """"""
  CallPath: EVM_Call_Input_Call_CallPath_Input_Call_CallPath

  """"""
  Input: OLAP_String

  """"""
  Reverted: Boolean

  """"""
  From: OLAP_String

  """"""
  Output: OLAP_String

  """"""
  Error: OLAP_String

  """"""
  Index: OLAP_Integer

  """"""
  Signature: EVM_Call_Input_Call_Signature_InputType

  """"""
  InternalCalls: OLAP_Integer

  """"""
  Gas: OLAP_BigInteger

  """"""
  Create: Boolean

  """"""
  EnterIndex: OLAP_Integer

  """"""
  SelfDestruct: Boolean
}

"""Order by"""
input EVM_BalanceUpdate_Ordering {
  """Select a field to sort descending"""
  descending: EVM_BalanceUpdate_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String

  """Select a field to sort ascending"""
  ascending: EVM_BalanceUpdate_EnumFields
}

"""Select by L1"""
input EVM_Event_Input_Block_L1_InputType {
  """"""
  Hash: OLAP_String

  """"""
  ParentHash: OLAP_String

  """"""
  Coinbase: OLAP_String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_BalanceUpdate_Input_Call_CallPath_Input_Call_CallPath {
  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]
}

"""Block fields"""
type EVM_DEXTradeByToken_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Coinbase value"""
  Coinbase(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """L1 fields"""
  L1: EVM_DEXTradeByToken_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime
  ): DateTime
}

"""Select by L1"""
input EVM_Transaction_Input_Receipt_L1_InputType {
  """"""
  Fee: EVM_Amount_With_Decimals

  """"""
  GasPrice: EVM_Amount_With_Decimals
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Event_Fields_Call_CallPath_Select_Call_CallPath {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""Select by Balance"""
input EVM_TokenHolder_Input_Balance_InputType {
  """"""
  Amount: EVM_Amount_With_Decimals
}

"""Select by Currency"""
input EVM_BalanceUpdate_Input_Currency_InputType {
  """"""
  Native: Boolean

  """"""
  SmartContract: OLAP_String

  """"""
  Symbol: OLAP_String

  """"""
  Decimals: OLAP_Integer

  """"""
  Delegated: Boolean

  """"""
  HasURI: Boolean

  """"""
  ProtocolName: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  DelegatedTo: OLAP_String

  """"""
  Fungible: Boolean
}

"""Limit definition"""
input EVM_Transfer_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Receipt fields"""
type EVM_Transfer_Fields_Receipt {
  """ContractAddress value"""
  ContractAddress(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """L1 fields"""
  L1: EVM_Transfer_Fields_Receipt_L1

  """Status value"""
  Status(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Type value"""
  Type(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): Int
}

"""Listed names of comparable fields in a cube"""
enum EVM_TokenHolder_CompareFields {
  """"""
  Currency_Fungible

  """"""
  Currency_Delegated

  """"""
  BalanceUpdate_OutCount

  """"""
  Balance_Amount

  """"""
  BalanceUpdate_FirstDate

  """"""
  Currency_Native

  """"""
  BalanceUpdate_InCount

  """"""
  BalanceUpdate_OutAmount

  """"""
  BalanceUpdate_InAmount

  """"""
  BalanceUpdate_Count

  """"""
  BalanceUpdate_LastDate

  """"""
  Currency_HasURI

  """"""
  Currency_Decimals
}

"""Select by L1"""
input EVM_Block_Input_Block_L1_InputType {
  """"""
  Hash: OLAP_String

  """"""
  BatcherAddr: OLAP_String

  """"""
  ParentHash: OLAP_String

  """"""
  BaseFee: EVM_Amount_With_Decimals

  """"""
  Coinbase: OLAP_String
}

"""Listed names of numeric fields in a cube"""
enum EVM_Block_NumFields {
  """"""
  Block_UnclesCount

  """"""
  ChainId

  """"""
  Block_GasLimit

  """"""
  Block_L1_BaseFee

  """"""
  Block_Number

  """"""
  Block_GasUsed

  """"""
  Block_Nonce

  """"""
  Block_Difficulty

  """"""
  Block_BaseFee

  """"""
  Block_Result_Gas

  """"""
  Block_TxCount
}

"""Select by Dex"""
input EVM_DEXTradeByToken_Input_Trade_Dex_InputType {
  """"""
  Pair: EVM_DEXTradeByToken_Input_Trade_Dex_Pair_InputType

  """"""
  DelegatedTo: OLAP_String

  """"""
  SmartContract: OLAP_String

  """"""
  OwnerAddress: OLAP_String

  """"""
  ProtocolFamily: OLAP_String

  """"""
  ProtocolVersion: OLAP_String

  """"""
  Delegated: Boolean

  """"""
  ProtocolName: OLAP_String
}

"""Listed names of numeric fields in a cube"""
enum EVM_DEXTradeByToken_NumFields {
  """"""
  Trade_Dex_Pair_Decimals

  """"""
  Call_Gas

  """"""
  Transaction_GasFeeCap

  """"""
  Transaction_Index

  """"""
  Trade_Price

  """"""
  Block_Nonce

  """"""
  Transaction_GasPrice

  """"""
  Fee_Savings

  """"""
  Call_Value

  """"""
  Fee_PriorityFeePerGas

  """"""
  Trade_Currency_Decimals

  """"""
  Trade_Side_Currency_Decimals

  """"""
  Log_Index

  """"""
  Transaction_Type

  """"""
  Receipt_L1_Fee

  """"""
  Log_LogAfterCallIndex

  """"""
  Log_Signature_SignatureType

  """"""
  Receipt_Status

  """"""
  Block_BaseFee

  """"""
  Block_GasLimit

  """"""
  Fee_SenderFee

  """"""
  Transaction_Nonce

  """"""
  Trade_Amount

  """"""
  Call_GasUsed

  """"""
  ChainId

  """"""
  Fee_GasRefund

  """"""
  Transaction_GasTipCap

  """"""
  Call_Index

  """"""
  Fee_EffectiveGasPrice

  """"""
  Transaction_Cost

  """"""
  Receipt_Type

  """"""
  Trade_Side_Amount

  """"""
  Transaction_Value

  """"""
  Block_Difficulty

  """"""
  Fee_MinerReward

  """"""
  Receipt_L1_GasPrice

  """"""
  Receipt_GasUsed

  """"""
  Call_InternalCalls

  """"""
  Call_CallerIndex

  """"""
  Fee_Burnt

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Block_GasUsed

  """"""
  Block_Number

  """"""
  Transaction_Gas
}

"""Call fields"""
type EVM_DEXTradeByToken_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Create value"""
  Create(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Error value"""
  Error(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """InternalCalls value"""
  InternalCalls(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Boolean

  """Signature fields"""
  Signature: EVM_DEXTradeByToken_Fields_Call_Signature

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""Select by Fee"""
input EVM_Transaction_Input_Fee_InputType {
  """"""
  EffectiveGasPrice: EVM_Amount_With_Decimals

  """"""
  MinerReward: EVM_Amount_With_Decimals

  """"""
  PriorityFeePerGas: EVM_Amount_With_Decimals

  """"""
  SenderFee: EVM_Amount_With_Decimals

  """"""
  Savings: EVM_Amount_With_Decimals

  """"""
  Burnt: EVM_Amount_With_Decimals

  """"""
  GasRefund: OLAP_BigInteger
}

"""Block fields"""
type EVM_MinerReward_Fields_Uncle_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Bloom value"""
  Bloom(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String

  """Extra value"""
  Extra(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """MixDigest value"""
  MixDigest(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Nonce value"""
  Nonce(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ReceiptHash value"""
  ReceiptHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Root value"""
  Root(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime
  ): DateTime

  """TxHash value"""
  TxHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UncleHash value"""
  UncleHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Currency fields"""
type EVM_DEXTrade_Fields_Trade_Buy_Currency {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Select filters for Transfer_Type"""
input EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type {
  """Not one of the values"""
  notIn: [EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type_Input]

  """Exact match"""
  is: EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type_Input

  """Not this"""
  not: EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type_Input

  """One of the values"""
  in: [EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type_Input]
}

"""L1 fields"""
type EVM_Event_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Balance fields"""
type EVM_TokenHolder_Fields_Balance {
  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Select by Fee"""
input EVM_DEXTrade_Input_Fee_InputType {
  """"""
  EffectiveGasPrice: EVM_Amount_With_Decimals

  """"""
  Savings: EVM_Amount_With_Decimals

  """"""
  GasRefund: OLAP_BigInteger

  """"""
  Burnt: EVM_Amount_With_Decimals

  """"""
  MinerReward: EVM_Amount_With_Decimals

  """"""
  SenderFee: EVM_Amount_With_Decimals

  """"""
  PriorityFeePerGas: EVM_Amount_With_Decimals
}

"""Signature fields"""
type EVM_Transfer_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """Name value"""
  Name(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Enumeration for Transfer_Type"""
enum EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type_Input {
  """Transfer_Type transaction"""
  transaction

  """Transfer_Type call"""
  call

  """Transfer_Type token"""
  token
}

"""Select by Signature"""
input EVM_DEXTrade_Input_Log_Signature_InputType {
  """"""
  Name: OLAP_String

  """"""
  Parsed: Boolean

  """"""
  Signature: OLAP_String

  """"""
  Abi: OLAP_String

  """"""
  SignatureType: OLAP_Integer

  """"""
  SignatureHash: OLAP_String
}

"""Selector for Returns_Path"""
input EVM_Call_Input_Returns_Input_FieldSelector_FieldSelector {
  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""Result fields"""
type EVM_Block_Fields_Block_Result {
  """Errors value"""
  Errors(
    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields
  ): String

  """Gas value"""
  Gas(
    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): String
}

"""Array of Trade_Fees includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Trade_Fees_Select_Trade_Fees {
  """Does not End with this element"""
  notEndsWith: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_DEXTradeByToken_Fields_Trade_Fees_Select_FieldSelector]
}

""""""
type EVM_ABI_Address_Value_Arg {
  """"""
  address: String
}

"""L1 fields"""
type EVM_MinerReward_Fields_Block_L1 {
  """BaseFee value"""
  BaseFee(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Listed names of comparable fields in a cube"""
enum EVM_Call_CompareFields {
  """"""
  Transaction_GasTipCap

  """"""
  Fee_Burnt

  """"""
  Fee_SenderFee

  """"""
  Call_Success

  """"""
  Block_Difficulty

  """"""
  Call_CallerIndex

  """"""
  Transaction_GasPrice

  """"""
  ChainId

  """"""
  Fee_PriorityFeePerGas

  """"""
  Receipt_Type

  """"""
  Call_Opcode_Code

  """"""
  Call_Delegated

  """"""
  Block_Time

  """"""
  Block_Nonce

  """"""
  Call_Depth

  """"""
  Call_Create

  """"""
  Call_Reverted

  """"""
  Transaction_Index

  """"""
  Transaction_Cost

  """"""
  Call_Signature_Parsed

  """"""
  Transaction_Gas

  """"""
  Block_Number

  """"""
  Call_GasUsed

  """"""
  Transaction_Protected

  """"""
  Call_ExitIndex

  """"""
  Transaction_Value

  """"""
  Receipt_L1_Fee

  """"""
  Call_LogCount

  """"""
  Transaction_Nonce

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Block_GasUsed

  """"""
  Fee_MinerReward

  """"""
  Call_InternalCalls

  """"""
  Fee_Savings

  """"""
  Call_Index

  """"""
  Fee_EffectiveGasPrice

  """"""
  Call_Gas

  """"""
  Receipt_GasUsed

  """"""
  Call_Value

  """"""
  Call_SelfDestruct

  """"""
  Receipt_Status

  """"""
  Call_EnterIndex

  """"""
  Fee_GasRefund

  """"""
  Block_BaseFee

  """"""
  Call_Signature_SignatureType

  """"""
  Receipt_L1_GasPrice

  """"""
  Block_GasLimit

  """"""
  Transaction_GasFeeCap

  """"""
  Transaction_Time

  """"""
  TransactionStatus_Success

  """"""
  Block_Date

  """"""
  Transaction_Type
}

"""ContractAddressCode fields"""
type EVM_Transaction_Fields_Receipt_ContractAddressCode {
  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Size value"""
  Size(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Int

  """Suicided value"""
  Suicided(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Type of algorithm to filter block updates"""
enum blocks_update_arg_enum {
  """Blocks added to the head of the reorgtree, no duplicates"""
  head

  """
  Blocks added to the head of the reorg tree and all uncle added on branches, no duplicates
  """
  all

  """
  Blocks added to the head of the reorg tree, duplicates possible due to reorg. Can be used together with uncles_updates.
  """
  head_updates

  """
  Blocks added as uncles to the branches of the reorg tree, duplicates possible due to reorg. Can be used together with head_updates.
  """
  branches_updates
}

""""""
type EVM_ABI_Boolean_Value_Arg {
  """"""
  bool: Boolean
}

"""Limit definition"""
input EVM_DEXTrade_Limit {
  """Offset of results"""
  offset: Int = 0

  """Max count in results"""
  count: Int = 0
}

"""Select by Opcode"""
input EVM_Call_Input_Call_Opcode_InputType {
  """"""
  Name: OLAP_String

  """"""
  Code: OLAP_Integer
}

"""Select by Dex"""
input EVM_DEXTrade_Input_Trade_Dex_InputType {
  """"""
  ProtocolFamily: OLAP_String

  """"""
  DelegatedTo: OLAP_String

  """"""
  Pair: EVM_DEXTrade_Input_Trade_Dex_Pair_InputType

  """"""
  SmartContract: OLAP_String

  """"""
  OwnerAddress: OLAP_String

  """"""
  ProtocolName: OLAP_String

  """"""
  Delegated: Boolean

  """"""
  ProtocolVersion: OLAP_String
}

"""Listed names of numeric fields in a cube"""
enum EVM_Uncle_NumFields {
  """"""
  Block_Nonce

  """"""
  Block_Number

  """"""
  Uncle_Block_Number

  """"""
  Block_L1_BaseFee

  """"""
  ChainId

  """"""
  Uncle_Block_BaseFee

  """"""
  Uncle_Block_GasLimit

  """"""
  Uncle_Block_Difficulty

  """"""
  Block_Result_Gas

  """"""
  Block_GasUsed

  """"""
  Block_Difficulty

  """"""
  Block_BaseFee

  """"""
  Block_GasLimit

  """"""
  Uncle_Index

  """"""
  Block_UnclesCount

  """"""
  Uncle_Block_Nonce

  """"""
  Uncle_Block_GasUsed

  """"""
  Block_TxCount
}

"""Currency fields"""
type EVM_BalanceUpdate_Fields_Currency {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Native value"""
  Native(
    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): String
}

"""Selector for Returns"""
input EVM_Call_Input_Returns_Input_FieldSelector {
  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Call_Input_Returns_Input_FieldSelector_Returns_Path
}

""""""
input EVM_BalanceUpdate_Filter {
  """Select by Block"""
  Block: EVM_BalanceUpdate_Input_Block_InputType

  """Select by Currency"""
  Currency: EVM_BalanceUpdate_Input_Currency_InputType

  """Select by BalanceUpdate"""
  BalanceUpdate: EVM_BalanceUpdate_Input_BalanceUpdate_InputType

  """Select by Transaction"""
  Transaction: EVM_BalanceUpdate_Input_Transaction_InputType

  """Select by Uncle"""
  Uncle: EVM_BalanceUpdate_Input_Uncle_InputType

  """Select by Call"""
  Call: EVM_BalanceUpdate_Input_Call_InputType

  """Select by Log"""
  Log: EVM_BalanceUpdate_Input_Log_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger
}

"""Transfer fields"""
type EVM_Transfer_Fields_Transfer {
  """Amount value"""
  Amount(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """Currency fields"""
  Currency: EVM_Transfer_Fields_Transfer_Currency

  """Data value"""
  Data(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Id value"""
  Id(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Receiver value"""
  Receiver(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Sender value"""
  Sender(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): Boolean

  """Type value"""
  Type(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): EVM_Transfer_Fields_Transfer_Transfer_Type_Output

  """URI value"""
  URI(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""L1 fields"""
type EVM_Event_Fields_Block_L1 {
  """Coinbase value"""
  Coinbase(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Select filters for Trade_Side"""
input EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side {
  """Not one of the values"""
  notIn: [EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input]

  """Exact match"""
  is: EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input

  """Not this"""
  not: EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input

  """One of the values"""
  in: [EVM_DEXTradeByToken_Fields_Trade_Side_Type_Select_Trade_Side_Input]
}

"""Select by Transaction"""
input EVM_Call_Input_Transaction_InputType {
  """"""
  Hash: OLAP_String

  """"""
  From: OLAP_String

  """"""
  Nonce: OLAP_BigInteger

  """"""
  Time: OLAP_BigInteger

  """"""
  GasPrice: EVM_Amount_With_Decimals

  """"""
  Protected: Boolean

  """"""
  To: OLAP_String

  """"""
  GasFeeCap: EVM_Amount_With_Decimals

  """"""
  Type: OLAP_Integer

  """"""
  Value: EVM_Amount_With_Decimals

  """"""
  Index: OLAP_BigInteger

  """"""
  Gas: OLAP_BigInteger

  """"""
  Cost: EVM_Amount_With_Decimals

  """"""
  GasTipCap: EVM_Amount_With_Decimals
}

"""Log fields"""
type EVM_BalanceUpdate_Fields_Log {
  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Listed names of comparable fields in a cube"""
enum EVM_Transfer_CompareFields {
  """"""
  Call_Value

  """"""
  Transaction_GasFeeCap

  """"""
  Receipt_L1_Fee

  """"""
  Block_Time

  """"""
  Transaction_Index

  """"""
  Log_LogAfterCallIndex

  """"""
  Call_Signature_Parsed

  """"""
  Transaction_Nonce

  """"""
  Call_GasUsed

  """"""
  Log_Signature_SignatureType

  """"""
  Receipt_GasUsed

  """"""
  Transaction_Type

  """"""
  Transfer_Currency_Native

  """"""
  ChainId

  """"""
  Transaction_GasTipCap

  """"""
  Fee_Burnt

  """"""
  Fee_SenderFee

  """"""
  Receipt_Type

  """"""
  Call_Signature_SignatureType

  """"""
  Block_GasLimit

  """"""
  Transfer_Currency_Delegated

  """"""
  Call_InternalCalls

  """"""
  Block_BaseFee

  """"""
  Block_Nonce

  """"""
  Call_Gas

  """"""
  Transaction_Time

  """"""
  Fee_EffectiveGasPrice

  """"""
  Fee_PriorityFeePerGas

  """"""
  Transfer_Id

  """"""
  Log_Index

  """"""
  TransactionStatus_Success

  """"""
  Call_Success

  """"""
  Block_Difficulty

  """"""
  Transaction_Cost

  """"""
  Call_SelfDestruct

  """"""
  Transaction_Gas

  """"""
  Transfer_Amount

  """"""
  Block_GasUsed

  """"""
  Receipt_L1_GasPrice

  """"""
  Transfer_Currency_HasURI

  """"""
  Call_Delegated

  """"""
  Log_Signature_Parsed

  """"""
  Block_Date

  """"""
  Transaction_GasPrice

  """"""
  Call_CallerIndex

  """"""
  Transaction_Protected

  """"""
  Transfer_Currency_Fungible

  """"""
  Fee_MinerReward

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Fee_GasRefund

  """"""
  Transfer_Currency_Decimals

  """"""
  Call_Reverted

  """"""
  Receipt_Status

  """"""
  Transfer_Success

  """"""
  Transaction_Value

  """"""
  Call_Index

  """"""
  Fee_Savings

  """"""
  Block_Number

  """"""
  Call_Create
}

"""Array of Returns includes or excludes provided value"""
input EVM_Call_Input_Returns_Input_Returns {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Input_Returns_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Input_Returns_Input_FieldSelector]
}

"""Select by Currency"""
input EVM_Transfer_Input_Transfer_Currency_InputType {
  """"""
  HasURI: Boolean

  """"""
  Fungible: Boolean

  """"""
  Native: Boolean

  """"""
  SmartContract: OLAP_String

  """"""
  Symbol: OLAP_String

  """"""
  Name: OLAP_String

  """"""
  DelegatedTo: OLAP_String

  """"""
  Decimals: OLAP_Integer

  """"""
  ProtocolName: OLAP_String

  """"""
  Delegated: Boolean
}

"""Signature fields"""
type EVM_Event_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""LimitBy definition"""
input EVM_Uncle_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_Uncle_EnumFields]
}

"""Reward fields"""
type EVM_MinerReward_Fields_Reward {
  """BurntFees value"""
  BurntFees(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String

  """Dynamic value"""
  Dynamic(
    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """Static value"""
  Static(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Total value"""
  Total(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """TxFees value"""
  TxFees(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String

  """Uncle value"""
  Uncle(
    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields
  ): String
}

"""Select by Call"""
input EVM_DEXTrade_Input_Call_InputType {
  """"""
  From: OLAP_String

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  CallPath: EVM_DEXTrade_Input_Call_CallPath_Input_Call_CallPath

  """"""
  To: OLAP_String

  """"""
  CallerIndex: OLAP_Integer

  """"""
  Index: OLAP_Integer

  """"""
  Reverted: Boolean

  """"""
  Gas: OLAP_BigInteger

  """"""
  Create: Boolean

  """"""
  Delegated: Boolean

  """"""
  InternalCalls: OLAP_Integer

  """"""
  Signature: EVM_DEXTrade_Input_Call_Signature_InputType

  """"""
  SelfDestruct: Boolean

  """"""
  Value: OLAP_BigInteger

  """"""
  Success: Boolean

  """"""
  Error: OLAP_String
}

"""Log fields"""
type EVM_DEXTrade_Fields_Log {
  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Signature fields"""
  Signature: EVM_DEXTrade_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Arguments_Path fields"""
type EVM_Call_Fields_Arguments_Path {
  """"""
  Index: Int

  """"""
  Name: String

  """"""
  Type: String
}

"""Array of Trade_Ids includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Trade_Ids_Input_Trade_Ids {
  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer
}

"""Listed names of comparable fields in a cube"""
enum EVM_Transaction_CompareFields {
  """"""
  Block_GasUsed

  """"""
  ChainId

  """"""
  Block_GasLimit

  """"""
  Block_BaseFee

  """"""
  Receipt_Status

  """"""
  Receipt_ContractAddressCode_Size

  """"""
  Transaction_Time

  """"""
  Signature_R

  """"""
  Transaction_Gas

  """"""
  Block_Number

  """"""
  Transaction_Cost

  """"""
  Fee_Burnt

  """"""
  Fee_EffectiveGasPrice

  """"""
  Transaction_Type

  """"""
  Receipt_ContractAddressCode_Suicided

  """"""
  Transaction_Value

  """"""
  Transaction_CallCount

  """"""
  TransactionStatus_Success

  """"""
  Fee_SenderFee

  """"""
  Fee_MinerReward

  """"""
  Transaction_Index

  """"""
  Block_Nonce

  """"""
  Signature_S

  """"""
  Receipt_GasUsed

  """"""
  Receipt_L1_GasPrice

  """"""
  Receipt_Type

  """"""
  Fee_GasRefund

  """"""
  Transaction_Protected

  """"""
  Block_Time

  """"""
  Transaction_GasTipCap

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Fee_PriorityFeePerGas

  """"""
  Transaction_GasPrice

  """"""
  Fee_Savings

  """"""
  Signature_V

  """"""
  Block_Difficulty

  """"""
  Transaction_GasFeeCap

  """"""
  Transaction_Nonce

  """"""
  Receipt_L1_Fee

  """"""
  Transaction_ToCode_Size

  """"""
  Transaction_ToCode_Suicided

  """"""
  Block_Date
}

"""Fee fields"""
type EVM_Transaction_Fields_Fee {
  """Burnt value"""
  Burnt(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasRefund value"""
  GasRefund(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """MinerReward value"""
  MinerReward(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Savings value"""
  Savings(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFee value"""
  SenderFee(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String
}

""""""
input Metric_filter_Float {
  """Less than the value"""
  le: Float

  """Greater or equal the value"""
  gt: Float

  """Less or equal the value"""
  lt: Float

  """Equal to value"""
  eq: Float

  """Not equal to value"""
  ne: Float

  """Greater than the value"""
  ge: Float
}

"""Block fields"""
type EVM_Event_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Coinbase value"""
  Coinbase(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """Hash value"""
  Hash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields
  ): String

  """L1 fields"""
  L1: EVM_Event_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Number value"""
  Number(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Time value"""
  Time(
    """Return value when the argument is maximum"""
    maximum: EVM_Event_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Event_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Event_Filter
  ): DateTime
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_BalanceUpdate_Fields_Call_CallPath_Select_Call_CallPath {
  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]
}

"""LimitBy definition"""
input EVM_DEXTrade_LimitBy {
  """Limit by specific field"""
  by: [EVM_DEXTrade_EnumFields]

  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Select by Log"""
input EVM_DEXTrade_Input_Log_InputType {
  """"""
  Index: OLAP_Integer

  """"""
  Signature: EVM_DEXTrade_Input_Log_Signature_InputType

  """"""
  SmartContract: OLAP_String

  """"""
  LogAfterCallIndex: OLAP_Integer
}

"""Select by Buy"""
input EVM_DEXTrade_Input_Trade_Buy_InputType {
  """"""
  URIs: EVM_DEXTrade_Input_Trade_Buy_URIs_Input_Trade_Buy_URIs

  """"""
  Seller: OLAP_String

  """"""
  Price: OLAP_Float

  """"""
  Currency: EVM_DEXTrade_Input_Trade_Buy_Currency_InputType

  """"""
  Amount: EVM_Amount_With_Decimals

  """"""
  Buyer: OLAP_String

  """"""
  OrderId: OLAP_String

  """"""
  Ids: EVM_DEXTrade_Input_Trade_Buy_Ids_Input_Trade_Buy_Ids
}

"""Select by Receipt"""
input EVM_Transfer_Input_Receipt_InputType {
  """"""
  ContractAddress: OLAP_String

  """"""
  L1: EVM_Transfer_Input_Receipt_L1_InputType

  """"""
  Type: OLAP_Integer

  """"""
  Status: OLAP_BigInteger

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  CumulativeGasUsed: OLAP_BigInteger
}

"""Order by"""
input EVM_Transfer_Ordering {
  """Select a field to sort ascending"""
  ascending: EVM_Transfer_EnumFields

  """Select a field to sort descending"""
  descending: EVM_Transfer_EnumFields

  """MetricName ( or alias ) of the field in the query to sort ascending"""
  ascendingByField: String

  """MetricName ( or alias ) of the field in the query to sort descending"""
  descendingByField: String
}

"""Log fields"""
type EVM_DEXTradeByToken_Fields_Log {
  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogAfterCallIndex value"""
  LogAfterCallIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Signature fields"""
  Signature: EVM_DEXTradeByToken_Fields_Log_Signature

  """SmartContract value"""
  SmartContract(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String
}

""""""
input EVM_Transaction_Filter {
  """Select by Transaction"""
  Transaction: EVM_Transaction_Input_Transaction_InputType

  """Select by Receipt"""
  Receipt: EVM_Transaction_Input_Receipt_InputType

  """Select by Fee"""
  Fee: EVM_Transaction_Input_Fee_InputType

  """Select by Block"""
  Block: EVM_Transaction_Input_Block_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Transaction_Input_TransactionStatus_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Signature"""
  Signature: EVM_Transaction_Input_Signature_InputType
}

"""Trade_Fees fields"""
type EVM_DEXTrade_Fields_Trade_Trade_Fees {
  """"""
  Amount: String

  """"""
  Currency: EVM_DEXTrade_Fields_Trade_Trade_Fees_Currency

  """"""
  Payer: String

  """"""
  Recipient: String
}

"""Opcode fields"""
type EVM_Call_Fields_Call_Opcode {
  """Code value"""
  Code(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Transaction fields"""
type EVM_BalanceUpdate_Fields_Transaction {
  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""Signature fields"""
type EVM_DEXTradeByToken_Fields_Log_Signature {
  """Abi value"""
  Abi(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""EVM type blockchain schema"""
type EVM {
  """"""
  BalanceUpdates(
    """Response limits"""
    limit: EVM_BalanceUpdate_Limit

    """Conditions on query to filter results"""
    where: EVM_BalanceUpdate_Filter

    """Field ordering"""
    orderBy: [EVM_BalanceUpdate_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_BalanceUpdate_LimitBy
  ): [EVM_BalanceUpdate_Cube]

  """"""
  Blocks(
    """Conditions on query to filter results"""
    where: EVM_Block_Filter

    """Field ordering"""
    orderBy: [EVM_Block_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Block_LimitBy

    """Response limits"""
    limit: EVM_Block_Limit
  ): [EVM_Block_Cube]

  """"""
  Calls(
    """Field ordering"""
    orderBy: [EVM_Call_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Call_LimitBy

    """Response limits"""
    limit: EVM_Call_Limit

    """Conditions on query to filter results"""
    where: EVM_Call_Filter
  ): [EVM_Call_Cube]

  """"""
  DEXTradeByTokens(
    """Field ordering"""
    orderBy: [EVM_DEXTradeByToken_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_DEXTradeByToken_LimitBy

    """Response limits"""
    limit: EVM_DEXTradeByToken_Limit

    """Conditions on query to filter results"""
    where: EVM_DEXTradeByToken_Filter
  ): [EVM_DEXTradeByToken_Cube]

  """"""
  DEXTrades(
    """Response limits"""
    limit: EVM_DEXTrade_Limit

    """Conditions on query to filter results"""
    where: EVM_DEXTrade_Filter

    """Field ordering"""
    orderBy: [EVM_DEXTrade_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_DEXTrade_LimitBy
  ): [EVM_DEXTrade_Cube]

  """"""
  Events(
    """Conditions on query to filter results"""
    where: EVM_Event_Filter

    """Field ordering"""
    orderBy: [EVM_Event_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Event_LimitBy

    """Response limits"""
    limit: EVM_Event_Limit
  ): [EVM_Event_Cube]

  """"""
  MinerRewards(
    """Conditions on query to filter results"""
    where: EVM_MinerReward_Filter

    """Field ordering"""
    orderBy: [EVM_MinerReward_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_MinerReward_LimitBy

    """Response limits"""
    limit: EVM_MinerReward_Limit
  ): [EVM_MinerReward_Cube]

  """"""
  TokenHolders(
    """Conditions on query to filter results"""
    where: EVM_TokenHolder_Filter

    """Field ordering"""
    orderBy: [EVM_TokenHolder_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_TokenHolder_LimitBy

    """Response limits"""
    limit: EVM_TokenHolder_Limit

    """Parameter date used in cube, required to query the data"""
    date: String!

    """Parameter tokenSmartContract used in cube, required to query the data"""
    tokenSmartContract: String!
  ): [EVM_TokenHolder_Cube]

  """"""
  Transactions(
    """Response limits"""
    limit: EVM_Transaction_Limit

    """Conditions on query to filter results"""
    where: EVM_Transaction_Filter

    """Field ordering"""
    orderBy: [EVM_Transaction_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Transaction_LimitBy
  ): [EVM_Transaction_Cube]

  """"""
  Transfers(
    """Response limits"""
    limit: EVM_Transfer_Limit

    """Conditions on query to filter results"""
    where: EVM_Transfer_Filter

    """Field ordering"""
    orderBy: [EVM_Transfer_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Transfer_LimitBy
  ): [EVM_Transfer_Cube]

  """"""
  Uncles(
    """Response limits by specified field"""
    limitBy: EVM_Uncle_LimitBy

    """Response limits"""
    limit: EVM_Uncle_Limit

    """Conditions on query to filter results"""
    where: EVM_Uncle_Filter

    """Field ordering"""
    orderBy: [EVM_Uncle_Ordering]
  ): [EVM_Uncle_Cube]
}

"""Trade_Fees_Currency fields"""
type EVM_DEXTrade_Fields_Trade_Trade_Fees_Currency {
  """"""
  Decimals: Int

  """"""
  Name: String

  """"""
  ProtocolName: String

  """"""
  SmartContract: String

  """"""
  Symbol: String
}

""""""
input EVM_Transfer_Filter {
  """Select by Call"""
  Call: EVM_Transfer_Input_Call_InputType

  """Select by Log"""
  Log: EVM_Transfer_Input_Log_InputType

  """Select by Transfer"""
  Transfer: EVM_Transfer_Input_Transfer_InputType

  """Select by Block"""
  Block: EVM_Transfer_Input_Block_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_Transfer_Input_TransactionStatus_InputType

  """Select by Fee"""
  Fee: EVM_Transfer_Input_Fee_InputType

  """Select by Receipt"""
  Receipt: EVM_Transfer_Input_Receipt_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Transaction"""
  Transaction: EVM_Transfer_Input_Transaction_InputType
}

"""Select by Receipt"""
input EVM_Call_Input_Receipt_InputType {
  """"""
  GasUsed: OLAP_BigInteger

  """"""
  CumulativeGasUsed: OLAP_BigInteger

  """"""
  L1: EVM_Call_Input_Receipt_L1_InputType

  """"""
  ContractAddress: OLAP_String

  """"""
  Status: OLAP_BigInteger

  """"""
  Type: OLAP_Integer
}

"""Array of Arguments includes or excludes provided value"""
input EVM_Call_Fields_Arguments_Select_Arguments {
  """Excludes this element"""
  excludes: [EVM_Call_Fields_Arguments_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Fields_Arguments_Select_FieldSelector]
}

"""Selector for Arguments_Path"""
input EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer
}

"""Select by Fee"""
input EVM_DEXTradeByToken_Input_Fee_InputType {
  """"""
  MinerReward: EVM_Amount_With_Decimals

  """"""
  GasRefund: OLAP_BigInteger

  """"""
  EffectiveGasPrice: EVM_Amount_With_Decimals

  """"""
  Savings: EVM_Amount_With_Decimals

  """"""
  PriorityFeePerGas: EVM_Amount_With_Decimals

  """"""
  SenderFee: EVM_Amount_With_Decimals

  """"""
  Burnt: EVM_Amount_With_Decimals
}

""""""
type EVM_ABI_Bytes_Value_Arg {
  """"""
  hex: String
}

"""Listed names of numeric fields in a cube"""
enum EVM_MinerReward_NumFields {
  """"""
  Reward_Uncle

  """"""
  Reward_TxFees

  """"""
  Block_BaseFee

  """"""
  Block_Number

  """"""
  Block_GasLimit

  """"""
  Block_L1_BaseFee

  """"""
  Block_UnclesCount

  """"""
  Uncle_Block_Difficulty

  """"""
  Uncle_Block_BaseFee

  """"""
  Uncle_Block_GasLimit

  """"""
  ChainId

  """"""
  Uncle_Block_GasUsed

  """"""
  Block_GasUsed

  """"""
  Block_TxCount

  """"""
  Uncle_Block_Number

  """"""
  Reward_Static

  """"""
  Block_Result_Gas

  """"""
  Uncle_Block_Nonce

  """"""
  Reward_Total

  """"""
  Uncle_Index

  """"""
  Block_Nonce

  """"""
  Reward_BurntFees

  """"""
  Reward_Dynamic

  """"""
  Block_Difficulty
}

"""Block fields"""
type EVM_DEXTrade_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Coinbase value"""
  Coinbase(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_DEXTrade_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """Number value"""
  Number(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """Time value"""
  Time(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): DateTime
}

"""Transfers of tokens and native currency in EVM Blockchain"""
type EVM_Transfer_Cube {
  """Block fields"""
  Block: EVM_Transfer_Fields_Block

  """Call fields"""
  Call: EVM_Transfer_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Fee fields"""
  Fee: EVM_Transfer_Fields_Fee

  """Log fields"""
  Log: EVM_Transfer_Fields_Log

  """Receipt fields"""
  Receipt: EVM_Transfer_Fields_Receipt

  """Transaction fields"""
  Transaction: EVM_Transfer_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_Transfer_Fields_TransactionStatus

  """Transfer fields"""
  Transfer: EVM_Transfer_Fields_Transfer

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Transfer_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Transfer_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Transfer_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_Transfer_EnumFields]

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Covariance between two arguments"""
    with: EVM_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """First argument for Covariance between two arguments"""
    of: EVM_Transfer_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Transfer_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Transfer_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Transfer_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_Transfer_NumFields!
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_Transfer_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Argument for Median for a set of values"""
    of: EVM_Transfer_NumFields!
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """Argument for nakamoto index"""
    of: EVM_Transfer_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_Transfer_NumFields!
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Transfer_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Transfer_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """Argument for sum"""
    of: EVM_Transfer_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String
  ): String

  """Theil index of argument"""
  theil_index(
    """Argument for Theil index"""
    of: EVM_Transfer_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Transfer_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Transfer_NumFields
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_Transfer_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Pair fields"""
type EVM_DEXTradeByToken_Fields_Trade_Dex_Pair {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String
}

"""
Array of Transaction_AccessList_StorageKeys includes or excludes provided value
"""
input EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector_Transaction_AccessList_StorageKeys {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]
}

"""Select by L1"""
input EVM_DEXTrade_Input_Receipt_L1_InputType {
  """"""
  GasPrice: EVM_Amount_With_Decimals

  """"""
  Fee: EVM_Amount_With_Decimals
}

"""Select by Transaction"""
input EVM_DEXTradeByToken_Input_Transaction_InputType {
  """"""
  Nonce: OLAP_BigInteger

  """"""
  GasFeeCap: EVM_Amount_With_Decimals

  """"""
  To: OLAP_String

  """"""
  Gas: OLAP_BigInteger

  """"""
  GasTipCap: EVM_Amount_With_Decimals

  """"""
  Value: EVM_Amount_With_Decimals

  """"""
  Type: OLAP_Integer

  """"""
  Cost: EVM_Amount_With_Decimals

  """"""
  Hash: OLAP_String

  """"""
  GasPrice: EVM_Amount_With_Decimals

  """"""
  Protected: Boolean

  """"""
  From: OLAP_String

  """"""
  Index: OLAP_Integer
}

"""L1 fields"""
type EVM_Transaction_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Listed names of comparable fields in a cube"""
enum EVM_Block_CompareFields {
  """"""
  Block_Result_Gas

  """"""
  Block_L1_BaseFee

  """"""
  Block_TxCount

  """"""
  ChainId

  """"""
  Block_Time

  """"""
  Block_GasLimit

  """"""
  Block_Date

  """"""
  Block_Nonce

  """"""
  Block_BaseFee

  """"""
  Block_UnclesCount

  """"""
  Block_Number

  """"""
  Block_GasUsed

  """"""
  Block_Difficulty
}

"""Select by Fee"""
input EVM_Transfer_Input_Fee_InputType {
  """"""
  GasRefund: OLAP_BigInteger

  """"""
  SenderFee: EVM_Amount_With_Decimals

  """"""
  EffectiveGasPrice: EVM_Amount_With_Decimals

  """"""
  Burnt: EVM_Amount_With_Decimals

  """"""
  MinerReward: EVM_Amount_With_Decimals

  """"""
  Savings: EVM_Amount_With_Decimals

  """"""
  PriorityFeePerGas: EVM_Amount_With_Decimals
}

"""LimitBy definition"""
input EVM_Transaction_LimitBy {
  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_Transaction_EnumFields]

  """Max count in results"""
  count: Int = 0
}

"""Interval for time rounding"""
input OLAP_DateTimeInterval {
  """Interval units ( default is second )"""
  in: OLAP_DateTimeIntervalUnits

  """Interval size in specified units ( default is second )"""
  count: Int

  """Offset in specified units ( default is second )"""
  offset: Int
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_DEXTrade_Fields_Call_CallPath_Select_Call_CallPath {
  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer
}

"""L1 fields"""
type EVM_Call_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Select by Currency"""
input EVM_DEXTrade_Input_Trade_Sell_Currency_InputType {
  """"""
  SmartContract: OLAP_String

  """"""
  Fungible: Boolean

  """"""
  Symbol: OLAP_String

  """"""
  ProtocolName: OLAP_String

  """"""
  Decimals: OLAP_Integer

  """"""
  Name: OLAP_String

  """"""
  HasURI: Boolean
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Call_Fields_Call_CallPath_Select_Call_CallPath {
  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]
}

""""""
type EVM_ABI_String_Value_Arg {
  """"""
  string: String
}

"""Select by Receipt"""
input EVM_DEXTrade_Input_Receipt_InputType {
  """"""
  L1: EVM_DEXTrade_Input_Receipt_L1_InputType

  """"""
  Type: OLAP_Integer

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Status: OLAP_BigInteger

  """"""
  CumulativeGasUsed: OLAP_BigInteger

  """"""
  ContractAddress: OLAP_String
}

"""Fee fields"""
type EVM_Transfer_Fields_Fee {
  """Burnt value"""
  Burnt(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """EffectiveGasPrice value"""
  EffectiveGasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasRefund value"""
  GasRefund(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """MinerReward value"""
  MinerReward(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """PriorityFeePerGas value"""
  PriorityFeePerGas(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Savings value"""
  Savings(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """SenderFee value"""
  SenderFee(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Select by Receipt"""
input EVM_Transaction_Input_Receipt_InputType {
  """"""
  ContractAddressCode: EVM_Transaction_Input_Receipt_ContractAddressCode_InputType

  """"""
  ContractAddress: OLAP_String

  """"""
  L1: EVM_Transaction_Input_Receipt_L1_InputType

  """"""
  Type: OLAP_Integer

  """"""
  Bloom: OLAP_String

  """"""
  CumulativeGasUsed: OLAP_BigInteger

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  PostState: OLAP_String

  """"""
  Status: OLAP_BigInteger
}

"""L1 fields"""
type EVM_Block_Fields_Block_L1 {
  """BaseFee value"""
  BaseFee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields
  ): String

  """BatcherAddr value"""
  BatcherAddr(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Signature fields"""
type EVM_DEXTradeByToken_Fields_Call_Signature {
  """Abi value"""
  Abi(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Parsed value"""
  Parsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature value"""
  Signature(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SignatureHash value"""
  SignatureHash(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """SignatureType value"""
  SignatureType(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean
}

"""Selector for Transaction_AccessList"""
input EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector {
  """Select value for Address"""
  Address: OLAP_String

  """Select value for StorageKeys"""
  StorageKeys: EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector_Transaction_AccessList_StorageKeys
}

"""Selector for Trade_Fees"""
input EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector {
  """Select value for Recipient"""
  Recipient: OLAP_String

  """Select value for Currency"""
  Currency: EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector_FieldSelector

  """Select value for Amount"""
  Amount: EVM_Amount_With_Decimals

  """Select value for Payer"""
  Payer: OLAP_String
}

"""Select by L1"""
input EVM_BalanceUpdate_Input_Block_L1_InputType {
  """"""
  Hash: OLAP_String

  """"""
  ParentHash: OLAP_String
}

"""Selector for Topics"""
input EVM_Event_Fields_Topics_Select_FieldSelector {
  """Select value for Hash"""
  Hash: OLAP_String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Call_CallPath_Input_Call_CallPath {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""Select by L1"""
input EVM_DEXTradeByToken_Input_Receipt_L1_InputType {
  """"""
  Fee: EVM_Amount_With_Decimals

  """"""
  GasPrice: EVM_Amount_With_Decimals
}

"""Trade fields"""
type EVM_DEXTradeByToken_Fields_Trade {
  """Amount value"""
  Amount(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Buyer value"""
  Buyer(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Currency fields"""
  Currency: EVM_DEXTradeByToken_Fields_Trade_Currency

  """Dex fields"""
  Dex: EVM_DEXTradeByToken_Fields_Trade_Dex

  """Fees value"""
  Fees(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_Fees_Select_Trade_Fees

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): [EVM_DEXTradeByToken_Fields_Trade_Trade_Fees]

  """Ids value"""
  Ids(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_Ids_Select_Trade_Ids

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): [String]

  """OrderId value"""
  OrderId(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Price value"""
  Price(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """Seller value"""
  Seller(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """Sender value"""
  Sender(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Side fields"""
  Side: EVM_DEXTradeByToken_Fields_Trade_Side

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """URIs value"""
  URIs(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTradeByToken_Fields_Trade_URIs_Select_Trade_URIs
  ): [String]
}

"""Selector for Arguments"""
input EVM_Event_Input_Arguments_Input_FieldSelector {
  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Event_Input_Arguments_Input_FieldSelector_Arguments_Path
}

"""Miner reward for blocks in EVM Blockchain"""
type EVM_MinerReward_Cube {
  """Block fields"""
  Block: EVM_MinerReward_Fields_Block

  """ChainId value"""
  ChainId(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields
  ): String

  """Reward fields"""
  Reward: EVM_MinerReward_Fields_Reward

  """Uncle fields"""
  Uncle: EVM_MinerReward_Fields_Uncle

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_MinerReward_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_MinerReward_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_MinerReward_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_MinerReward_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_MinerReward_EnumFields]
  ): String

  """Covariance between two arguments"""
  covariance(
    """Second argument for Covariance between two arguments"""
    with: EVM_MinerReward_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """First argument for Covariance between two arguments"""
    of: EVM_MinerReward_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_MinerReward_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_MinerReward_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_MinerReward_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_MinerReward_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """Argument for Entropy for a set of values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_MinerReward_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Argument for Median for a set of values"""
    of: EVM_MinerReward_NumFields!
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_MinerReward_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_MinerReward_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_MinerReward_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_MinerReward_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_MinerReward_NumFields!
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Argument for Standard deviation of the values"""
    of: EVM_MinerReward_NumFields!
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_MinerReward_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_MinerReward_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_MinerReward_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_MinerReward_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_MinerReward_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

""""""
input EVM_DEXTrade_Filter {
  """Select by Receipt"""
  Receipt: EVM_DEXTrade_Input_Receipt_InputType

  """Select by TransactionStatus"""
  TransactionStatus: EVM_DEXTrade_Input_TransactionStatus_InputType

  """Select by Block"""
  Block: EVM_DEXTrade_Input_Block_InputType

  """Select by Call"""
  Call: EVM_DEXTrade_Input_Call_InputType

  """Select by Fee"""
  Fee: EVM_DEXTrade_Input_Fee_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Transaction"""
  Transaction: EVM_DEXTrade_Input_Transaction_InputType

  """Select by Log"""
  Log: EVM_DEXTrade_Input_Log_InputType

  """Select by Trade"""
  Trade: EVM_DEXTrade_Input_Trade_InputType
}

"""Receipt fields"""
type EVM_DEXTradeByToken_Fields_Receipt {
  """ContractAddress value"""
  ContractAddress(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """CumulativeGasUsed value"""
  CumulativeGasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """L1 fields"""
  L1: EVM_DEXTradeByToken_Fields_Receipt_L1

  """Status value"""
  Status(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_Transfer_Fields_Call_CallPath_Select_Call_CallPath {
  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]

  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]
}

"""Transaction fields"""
type EVM_DEXTradeByToken_Fields_Transaction {
  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Hash value"""
  Hash(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Protected value"""
  Protected(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """To value"""
  To(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""TransactionStatus fields"""
type EVM_Transaction_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): String

  """Success value"""
  Success(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): Boolean
}

""""""
input EVM_TokenHolder_Filter {
  """Select by Holder"""
  Holder: EVM_TokenHolder_Input_Holder_InputType

  """Select by Currency"""
  Currency: EVM_TokenHolder_Input_Currency_InputType

  """Select by BalanceUpdate"""
  BalanceUpdate: EVM_TokenHolder_Input_BalanceUpdate_InputType

  """Select by Balance"""
  Balance: EVM_TokenHolder_Input_Balance_InputType
}

"""Selector for Trade_Fees_Currency"""
input EVM_DEXTrade_Input_Trade_Fees_Input_FieldSelector_FieldSelector {
  """Select value for Name"""
  Name: OLAP_String

  """Select value for Symbol"""
  Symbol: OLAP_String

  """Select value for Decimals"""
  Decimals: OLAP_Integer

  """Select value for SmartContract"""
  SmartContract: OLAP_String

  """Select value for ProtocolName"""
  ProtocolName: OLAP_String
}

"""Block fields"""
type EVM_Call_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_Call_Fields_Block_L1

  """Nonce value"""
  Nonce(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """Number value"""
  Number(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """ParentHash value"""
  ParentHash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime

    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval
  ): DateTime
}

"""Update of balances for tokens and native currency in EVM Blockchain"""
type EVM_BalanceUpdate_Cube {
  """BalanceUpdate fields"""
  BalanceUpdate: EVM_BalanceUpdate_Fields_BalanceUpdate

  """Block fields"""
  Block: EVM_BalanceUpdate_Fields_Block

  """Call fields"""
  Call: EVM_BalanceUpdate_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_BalanceUpdate_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_BalanceUpdate_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Currency fields"""
  Currency: EVM_BalanceUpdate_Fields_Currency

  """Log fields"""
  Log: EVM_BalanceUpdate_Fields_Log

  """Transaction fields"""
  Transaction: EVM_BalanceUpdate_Fields_Transaction

  """Uncle fields"""
  Uncle: EVM_BalanceUpdate_Fields_Uncle

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_BalanceUpdate_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_BalanceUpdate_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Count distinct values of the field"""
    distinct: [EVM_BalanceUpdate_EnumFields]
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """First argument for Covariance between two arguments"""
    of: EVM_BalanceUpdate_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_BalanceUpdate_NumFields
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_BalanceUpdate_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_BalanceUpdate_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_BalanceUpdate_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """Argument for Kurtosis for a set of values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Median for a set of values"""
  median(
    """Argument for Median for a set of values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_BalanceUpdate_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Argument for quantile"""
    of: EVM_BalanceUpdate_NumFields!
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_BalanceUpdate_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_BalanceUpdate_NumFields
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_BalanceUpdate_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Argument for Standard deviation of the values"""
    of: EVM_BalanceUpdate_NumFields!
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """Argument for sum"""
    of: EVM_BalanceUpdate_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_BalanceUpdate_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_BalanceUpdate_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_BalanceUpdate_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """Uniq values of the field"""
    of: [EVM_BalanceUpdate_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_BalanceUpdate_Filter
  ): String
}

"""Limit definition"""
input EVM_DEXTradeByToken_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Selector for Arguments_Path"""
input EVM_Event_Input_Arguments_Input_FieldSelector_FieldSelector {
  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String
}

"""Trade fields"""
type EVM_DEXTrade_Fields_Trade {
  """Buy fields"""
  Buy: EVM_DEXTrade_Fields_Trade_Buy

  """Dex fields"""
  Dex: EVM_DEXTrade_Fields_Trade_Dex

  """Fees value"""
  Fees(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Trade_Fees_Select_Trade_Fees

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): [EVM_DEXTrade_Fields_Trade_Trade_Fees]

  """Sell fields"""
  Sell: EVM_DEXTrade_Fields_Trade_Sell

  """Sender value"""
  Sender(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): Boolean
}

"""Buy fields"""
type EVM_DEXTrade_Fields_Trade_Buy {
  """Amount value"""
  Amount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Buyer value"""
  Buyer(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Currency fields"""
  Currency: EVM_DEXTrade_Fields_Trade_Buy_Currency

  """Ids value"""
  Ids(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Trade_Buy_Ids_Select_Trade_Buy_Ids

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): [String]

  """OrderId value"""
  OrderId(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """Price value"""
  Price(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """Seller value"""
  Seller(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """URIs value"""
  URIs(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Trade_Buy_URIs_Select_Trade_Buy_URIs

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): [String]
}

"""Call fields"""
type EVM_Call_Fields_Call {
  """CallPath value"""
  CallPath(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Call_Fields_Call_CallPath_Select_Call_CallPath

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): Int

  """Create value"""
  Create(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Depth value"""
  Depth(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """EnterIndex value"""
  EnterIndex(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): Int

  """Error value"""
  Error(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """ExitIndex value"""
  ExitIndex(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): Int

  """From value"""
  From(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields
  ): String

  """Index value"""
  Index(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Int

  """Input value"""
  Input(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """InternalCalls value"""
  InternalCalls(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """LogCount value"""
  LogCount(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Int

  """Opcode fields"""
  Opcode: EVM_Call_Fields_Call_Opcode

  """Output value"""
  Output(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Signature fields"""
  Signature: EVM_Call_Fields_Call_Signature

  """Success value"""
  Success(
    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter
  ): Boolean

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Value value"""
  Value(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Call_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Call_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Call_CompareFields
  ): String
}

"""Select filters for Transfer_Type"""
input EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type {
  """Exact match"""
  is: EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type_Input

  """Not this"""
  not: EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type_Input

  """One of the values"""
  in: [EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type_Input]

  """Not one of the values"""
  notIn: [EVM_Transfer_Fields_Transfer_Type_Select_Transfer_Type_Input]
}

"""Select by L1"""
input EVM_DEXTradeByToken_Input_Block_L1_InputType {
  """"""
  ParentHash: OLAP_String

  """"""
  Hash: OLAP_String
}

"""L1 fields"""
type EVM_DEXTradeByToken_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Select by Signature"""
input EVM_Event_Input_Log_Signature_InputType {
  """"""
  SignatureType: Boolean

  """"""
  Signature: OLAP_String

  """"""
  Parsed: Boolean

  """"""
  Abi: OLAP_String

  """"""
  SignatureHash: OLAP_String

  """"""
  Name: OLAP_String
}

"""Select by L1"""
input EVM_MinerReward_Input_Block_L1_InputType {
  """"""
  Coinbase: OLAP_String

  """"""
  Hash: OLAP_String

  """"""
  ParentHash: OLAP_String

  """"""
  BaseFee: EVM_Amount_With_Decimals
}

"""Transaction fields"""
type EVM_DEXTrade_Fields_Transaction {
  """Cost value"""
  Cost(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Nonce value"""
  Nonce(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Protected value"""
  Protected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): Boolean

  """Time value"""
  Time(
    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields
  ): String

  """To value"""
  To(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String
}

"""Select by Transaction"""
input EVM_BalanceUpdate_Input_Transaction_InputType {
  """"""
  Index: OLAP_BigInteger

  """"""
  Hash: OLAP_String

  """"""
  Time: OLAP_BigInteger
}

"""Select by Transaction"""
input EVM_Transfer_Input_Transaction_InputType {
  """"""
  Hash: OLAP_String

  """"""
  Index: OLAP_Integer

  """"""
  Value: EVM_Amount_With_Decimals

  """"""
  Type: OLAP_Integer

  """"""
  GasPrice: EVM_Amount_With_Decimals

  """"""
  Time: OLAP_BigInteger

  """"""
  GasFeeCap: EVM_Amount_With_Decimals

  """"""
  Gas: OLAP_BigInteger

  """"""
  GasTipCap: EVM_Amount_With_Decimals

  """"""
  To: OLAP_String

  """"""
  From: OLAP_String

  """"""
  Protected: Boolean

  """"""
  Nonce: OLAP_BigInteger

  """"""
  Cost: EVM_Amount_With_Decimals
}

"""L1 fields"""
type EVM_DEXTradeByToken_Fields_Block_L1 {
  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ParentHash value"""
  ParentHash(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Currency fields"""
type EVM_DEXTrade_Fields_Trade_Sell_Currency {
  """Decimals value"""
  Decimals(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Fungible value"""
  Fungible(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """ProtocolName value"""
  ProtocolName(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """SmartContract value"""
  SmartContract(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Returns fields"""
type EVM_Call_Fields_Returns {
  """"""
  Index: Int

  """"""
  Name: String

  """"""
  Path: [EVM_Call_Fields_Returns_Path]

  """"""
  Type: String

  """"""
  Value: EVM_ABI_Value_Union
}

"""Listed names of fields in a cube"""
enum EVM_BalanceUpdate_EnumFields {
  """"""
  Uncle_Index

  """"""
  Call_CallPath

  """"""
  Log_Index

  """"""
  Block_Hash

  """"""
  Block_L1_ParentHash

  """"""
  Currency_ProtocolName

  """"""
  BalanceUpdate_Amount

  """"""
  Uncle_Block_Number

  """"""
  Block_Number

  """"""
  Block_L1_Hash

  """"""
  Currency_Delegated

  """"""
  Block_ParentHash

  """"""
  Currency_SmartContract

  """"""
  Currency_DelegatedTo

  """"""
  Currency_Native

  """"""
  BalanceUpdate_URI

  """"""
  BalanceUpdate_Id

  """"""
  Currency_Decimals

  """"""
  Call_Index

  """"""
  BalanceUpdate_Type

  """"""
  Block_Date

  """"""
  BalanceUpdate_Address

  """"""
  Transaction_Hash

  """"""
  Currency_HasURI

  """"""
  Log_LogAfterCallIndex

  """"""
  Transaction_Index

  """"""
  Uncle_Block_Hash

  """"""
  Currency_Symbol

  """"""
  ChainId

  """"""
  Currency_Name

  """"""
  Transaction_Time

  """"""
  Block_Time

  """"""
  Currency_Fungible
}

"""Select by BalanceUpdate"""
input EVM_TokenHolder_Input_BalanceUpdate_InputType {
  """"""
  LastDate: OLAP_Date

  """"""
  InAmount: EVM_Amount_With_Decimals

  """"""
  Count: OLAP_BigInteger

  """"""
  OutCount: OLAP_BigInteger

  """"""
  FirstDate: OLAP_Date

  """"""
  InCount: OLAP_BigInteger

  """"""
  OutAmount: EVM_Amount_With_Decimals
}

"""Select by Transfer"""
input EVM_Transfer_Input_Transfer_InputType {
  """"""
  Sender: OLAP_String

  """"""
  Receiver: OLAP_String

  """"""
  Data: OLAP_String

  """"""
  Id: OLAP_BigInteger

  """"""
  URI: OLAP_String

  """"""
  Success: Boolean

  """"""
  Type: EVM_Transfer_Input_Transfer_Type_Input_Transfer_Type

  """"""
  Amount: EVM_Amount_With_Decimals

  """"""
  Currency: EVM_Transfer_Input_Transfer_Currency_InputType
}

"""EVM type blockchain schema"""
type EVM_Subscription {
  """"""
  BalanceUpdates(
    """Response limits by specified field"""
    limitBy: EVM_BalanceUpdate_LimitBy

    """Response limits"""
    limit: EVM_BalanceUpdate_Limit

    """Conditions on query to filter results"""
    where: EVM_BalanceUpdate_Filter

    """Field ordering"""
    orderBy: [EVM_BalanceUpdate_Ordering]
  ): [EVM_BalanceUpdate_Cube]

  """"""
  Blocks(
    """Conditions on query to filter results"""
    where: EVM_Block_Filter

    """Field ordering"""
    orderBy: [EVM_Block_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Block_LimitBy

    """Response limits"""
    limit: EVM_Block_Limit
  ): [EVM_Block_Cube]

  """"""
  Calls(
    """Response limits"""
    limit: EVM_Call_Limit

    """Conditions on query to filter results"""
    where: EVM_Call_Filter

    """Field ordering"""
    orderBy: [EVM_Call_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Call_LimitBy
  ): [EVM_Call_Cube]

  """"""
  DEXTradeByTokens(
    """Field ordering"""
    orderBy: [EVM_DEXTradeByToken_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_DEXTradeByToken_LimitBy

    """Response limits"""
    limit: EVM_DEXTradeByToken_Limit

    """Conditions on query to filter results"""
    where: EVM_DEXTradeByToken_Filter
  ): [EVM_DEXTradeByToken_Cube]

  """"""
  DEXTrades(
    """Conditions on query to filter results"""
    where: EVM_DEXTrade_Filter

    """Field ordering"""
    orderBy: [EVM_DEXTrade_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_DEXTrade_LimitBy

    """Response limits"""
    limit: EVM_DEXTrade_Limit
  ): [EVM_DEXTrade_Cube]

  """"""
  Events(
    """Conditions on query to filter results"""
    where: EVM_Event_Filter

    """Field ordering"""
    orderBy: [EVM_Event_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Event_LimitBy

    """Response limits"""
    limit: EVM_Event_Limit
  ): [EVM_Event_Cube]

  """"""
  MinerRewards(
    """Response limits"""
    limit: EVM_MinerReward_Limit

    """Conditions on query to filter results"""
    where: EVM_MinerReward_Filter

    """Field ordering"""
    orderBy: [EVM_MinerReward_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_MinerReward_LimitBy
  ): [EVM_MinerReward_Cube]

  """"""
  Transactions(
    """Conditions on query to filter results"""
    where: EVM_Transaction_Filter

    """Field ordering"""
    orderBy: [EVM_Transaction_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Transaction_LimitBy

    """Response limits"""
    limit: EVM_Transaction_Limit
  ): [EVM_Transaction_Cube]

  """"""
  Transfers(
    """Conditions on query to filter results"""
    where: EVM_Transfer_Filter

    """Field ordering"""
    orderBy: [EVM_Transfer_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Transfer_LimitBy

    """Response limits"""
    limit: EVM_Transfer_Limit
  ): [EVM_Transfer_Cube]

  """"""
  Uncles(
    """Conditions on query to filter results"""
    where: EVM_Uncle_Filter

    """Field ordering"""
    orderBy: [EVM_Uncle_Ordering]

    """Response limits by specified field"""
    limitBy: EVM_Uncle_LimitBy

    """Response limits"""
    limit: EVM_Uncle_Limit
  ): [EVM_Uncle_Cube]
}

"""Listed names of comparable fields in a cube"""
enum EVM_Uncle_CompareFields {
  """"""
  Block_GasUsed

  """"""
  Block_Nonce

  """"""
  Uncle_Block_Nonce

  """"""
  Block_Result_Gas

  """"""
  Uncle_Block_GasUsed

  """"""
  ChainId

  """"""
  Uncle_Block_GasLimit

  """"""
  Uncle_Block_Number

  """"""
  Block_Difficulty

  """"""
  Block_Date

  """"""
  Uncle_Index

  """"""
  Block_UnclesCount

  """"""
  Block_Number

  """"""
  Uncle_Block_Difficulty

  """"""
  Block_L1_BaseFee

  """"""
  Block_Time

  """"""
  Block_TxCount

  """"""
  Uncle_Block_BaseFee

  """"""
  Uncle_Block_Date

  """"""
  Block_BaseFee

  """"""
  Block_GasLimit

  """"""
  Uncle_Block_Time
}

"""Array of Arguments_Path includes or excludes provided value"""
input EVM_Call_Fields_Arguments_Select_FieldSelector_Arguments_Path {
  """Does not End with this element"""
  notEndsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Fields_Arguments_Select_FieldSelector_FieldSelector]
}

"""Selector for Returns_Path"""
input EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector {
  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String
}

"""Select by Block"""
input EVM_BalanceUpdate_Input_Uncle_Block_InputType {
  """"""
  Hash: OLAP_String

  """"""
  Number: OLAP_BigInteger
}

"""Enumeration for Transfer_Type"""
enum EVM_Transfer_Fields_Transfer_Transfer_Type_Output {
  """Transfer_Type token"""
  token

  """Transfer_Type transaction"""
  transaction

  """Transfer_Type call"""
  call
}

""""""
input Metric_filter_String {
  """Less than the value"""
  le: String

  """Greater or equal the value"""
  gt: String

  """Less or equal the value"""
  lt: String

  """Equal to value"""
  eq: String

  """Not equal to value"""
  ne: String

  """Greater than the value"""
  ge: String
}

"""Select by Holder"""
input EVM_TokenHolder_Input_Holder_InputType {
  """"""
  Address: OLAP_String
}

"""ToCode fields"""
type EVM_Transaction_Fields_Transaction_ToCode {
  """Hash value"""
  Hash(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields
  ): String

  """Size value"""
  Size(
    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter
  ): Int

  """Suicided value"""
  Suicided(
    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields
  ): Boolean
}

""""""
type RootSubscription {
  """"""
  EVM(
    """"""
    network: evm_network

    """
    Controls which blocks are included into update of the subscription data
    """
    trigger_on: blocks_update_arg_enum

    """Controls which dataset used to get results"""
    mempool: Boolean = false
  ): EVM_Subscription
}

"""Date and time in ISO8601 (2006-01-02T15:04:05Z) format"""
input OLAP_DateTime {
  """Time in the provided list"""
  in: [DateTime]

  """Time is not in the provided list"""
  notIn: [DateTime]

  """Strictly before this time"""
  before: DateTime

  """Strictly after this time"""
  after: DateTime

  """Before this time and including it"""
  till: DateTime

  """After this time and including it"""
  since: DateTime

  """Exact match the time"""
  is: DateTime

  """Not this time"""
  not: DateTime
}

"""Select by L1"""
input EVM_Event_Input_Receipt_L1_InputType {
  """"""
  GasPrice: EVM_Amount_With_Decimals

  """"""
  Fee: EVM_Amount_With_Decimals
}

"""Listed names of numeric fields in a cube"""
enum EVM_DEXTrade_NumFields {
  """"""
  Call_GasUsed

  """"""
  Log_Index

  """"""
  Call_Index

  """"""
  Fee_MinerReward

  """"""
  Transaction_Time

  """"""
  Call_InternalCalls

  """"""
  Fee_SenderFee

  """"""
  Trade_Sell_Price

  """"""
  Call_CallerIndex

  """"""
  Transaction_GasTipCap

  """"""
  Fee_Burnt

  """"""
  Receipt_Status

  """"""
  Fee_GasRefund

  """"""
  Trade_Sell_Amount

  """"""
  Block_Number

  """"""
  ChainId

  """"""
  Receipt_Type

  """"""
  Trade_Buy_Price

  """"""
  Fee_EffectiveGasPrice

  """"""
  Transaction_GasPrice

  """"""
  Transaction_Type

  """"""
  Receipt_L1_GasPrice

  """"""
  Transaction_GasFeeCap

  """"""
  Log_Signature_SignatureType

  """"""
  Fee_PriorityFeePerGas

  """"""
  Call_Gas

  """"""
  Transaction_Nonce

  """"""
  Fee_Savings

  """"""
  Block_GasUsed

  """"""
  Call_Value

  """"""
  Transaction_Index

  """"""
  Receipt_GasUsed

  """"""
  Trade_Buy_Amount

  """"""
  Trade_Dex_Pair_Decimals

  """"""
  Trade_Buy_Currency_Decimals

  """"""
  Transaction_Value

  """"""
  Transaction_Cost

  """"""
  Trade_Sell_Currency_Decimals

  """"""
  Block_Nonce

  """"""
  Block_Difficulty

  """"""
  Transaction_Gas

  """"""
  Receipt_L1_Fee

  """"""
  Block_BaseFee

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Log_LogAfterCallIndex

  """"""
  Block_GasLimit
}

"""Listed names of fields in a cube"""
enum EVM_Event_EnumFields {
  """"""
  Arguments

  """"""
  Call_To

  """"""
  Transaction_From

  """"""
  Log_Signature_Name

  """"""
  Block_Number

  """"""
  Fee_Burnt

  """"""
  Topics

  """"""
  Log_Index

  """"""
  Log_Pc

  """"""
  Log_LogAfterCallIndex

  """"""
  Block_Hash

  """"""
  Block_Difficulty

  """"""
  Block_L1_Coinbase

  """"""
  Transaction_Protected

  """"""
  Receipt_Type

  """"""
  Transaction_GasPrice

  """"""
  Call_Delegated

  """"""
  Transaction_Value

  """"""
  Call_Reverted

  """"""
  Call_GasUsed

  """"""
  Block_BaseFee

  """"""
  Transaction_Time

  """"""
  Call_Signature_Signature

  """"""
  LogHeader_Index

  """"""
  Transaction_Cost

  """"""
  Receipt_L1_Fee

  """"""
  Call_Signature_Parsed

  """"""
  Block_Date

  """"""
  Log_Signature_Signature

  """"""
  Log_Signature_SignatureHash

  """"""
  Transaction_Hash

  """"""
  Call_Input

  """"""
  Call_Create

  """"""
  Block_GasUsed

  """"""
  Log_SmartContract

  """"""
  Call_Gas

  """"""
  Receipt_GasUsed

  """"""
  TransactionStatus_Success

  """"""
  Call_Signature_Name

  """"""
  Call_Signature_SignatureHash

  """"""
  ChainId

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Receipt_Status

  """"""
  Block_L1_Hash

  """"""
  Log_Signature_Parsed

  """"""
  Block_ParentHash

  """"""
  Call_Output

  """"""
  Transaction_To

  """"""
  LogHeader_Address

  """"""
  Log_Signature_Abi

  """"""
  Transaction_Nonce

  """"""
  Call_Index

  """"""
  Transaction_GasFeeCap

  """"""
  TransactionStatus_FaultError

  """"""
  Call_Success

  """"""
  Receipt_L1_GasPrice

  """"""
  Block_L1_ParentHash

  """"""
  Fee_SenderFee

  """"""
  Receipt_ContractAddress

  """"""
  Block_GasLimit

  """"""
  Log_EnterIndex

  """"""
  Fee_Savings

  """"""
  Call_Signature_Abi

  """"""
  Call_Signature_SignatureType

  """"""
  TransactionStatus_EndError

  """"""
  Call_SelfDestruct

  """"""
  Block_Nonce

  """"""
  Block_Coinbase

  """"""
  Fee_GasRefund

  """"""
  Transaction_Index

  """"""
  LogHeader_Removed

  """"""
  Call_CallPath

  """"""
  Call_InternalCalls

  """"""
  Call_Error

  """"""
  Call_From

  """"""
  Call_CallerIndex

  """"""
  Fee_EffectiveGasPrice

  """"""
  Fee_PriorityFeePerGas

  """"""
  Transaction_GasTipCap

  """"""
  Fee_MinerReward

  """"""
  Log_ExitIndex

  """"""
  Transaction_Type

  """"""
  Block_Time

  """"""
  Log_Signature_SignatureType

  """"""
  Transaction_Gas

  """"""
  LogHeader_Data

  """"""
  Call_Value
}

"""Array of StateChanges includes or excludes provided value"""
input EVM_Call_Fields_StateChanges_Select_StateChanges {
  """Excludes this element"""
  excludes: [EVM_Call_Fields_StateChanges_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Fields_StateChanges_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Call_Fields_StateChanges_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Fields_StateChanges_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Fields_StateChanges_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Fields_StateChanges_Select_FieldSelector]
}

"""Array of Returns_Path includes or excludes provided value"""
input EVM_Call_Fields_Returns_Select_FieldSelector_Returns_Path {
  """Ends with this element"""
  endsWith: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Call_Fields_Returns_Select_FieldSelector_FieldSelector]
}

"""Array of Trade_Side_URIs includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Trade_Side_URIs_Select_Trade_Side_URIs {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

"""Array of Trade_Sell_URIs includes or excludes provided value"""
input EVM_DEXTrade_Fields_Trade_Sell_URIs_Select_Trade_Sell_URIs {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

""""""
enum OLAP_DateIntervalUnits {
  """Interval in weeks"""
  weeks

  """Interval in months"""
  months

  """Interval in years"""
  years

  """Interval in days"""
  days
}

"""Limit definition"""
input EVM_TokenHolder_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Select by TransactionStatus"""
input EVM_DEXTrade_Input_TransactionStatus_InputType {
  """"""
  FaultError: OLAP_String

  """"""
  Success: Boolean

  """"""
  EndError: OLAP_String
}

"""Array of Arguments includes or excludes provided value"""
input EVM_Event_Input_Arguments_Input_Arguments {
  """Ends with this element"""
  endsWith: [EVM_Event_Input_Arguments_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Event_Input_Arguments_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Input_Arguments_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Event_Input_Arguments_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Input_Arguments_Input_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Input_Arguments_Input_FieldSelector]
}

"""Uncle fields"""
type EVM_MinerReward_Fields_Uncle {
  """Block fields"""
  Block: EVM_MinerReward_Fields_Uncle_Block

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_MinerReward_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_MinerReward_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_MinerReward_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Limit definition"""
input EVM_Transaction_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Array of Transaction_AccessList includes or excludes provided value"""
input EVM_Transaction_Input_Transaction_AccessList_Input_Transaction_AccessList {
  """Starts with this element"""
  startsWith: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Transaction_Input_Transaction_AccessList_Input_FieldSelector]
}

"""Select by Block"""
input EVM_Transfer_Input_Block_InputType {
  """"""
  GasLimit: OLAP_BigInteger

  """"""
  Hash: OLAP_String

  """"""
  Coinbase: OLAP_String

  """"""
  ParentHash: OLAP_String

  """"""
  BaseFee: OLAP_BigInteger

  """"""
  Date: OLAP_Date

  """"""
  L1: EVM_Transfer_Input_Block_L1_InputType

  """"""
  Difficulty: OLAP_BigInteger

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Nonce: OLAP_BigInteger

  """"""
  Number: OLAP_BigInteger

  """"""
  Time: OLAP_DateTime
}

"""Call fields"""
type EVM_Transfer_Fields_Call {
  """CallPath value"""
  CallPath(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Transfer_Fields_Call_CallPath_Select_Call_CallPath
  ): [Int]

  """CallerIndex value"""
  CallerIndex(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Create value"""
  Create(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Boolean

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Error value"""
  Error(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """InternalCalls value"""
  InternalCalls(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Reverted value"""
  Reverted(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """SelfDestruct value"""
  SelfDestruct(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): Boolean

  """Signature fields"""
  Signature: EVM_Transfer_Fields_Call_Signature

  """Success value"""
  Success(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """To value"""
  To(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Value value"""
  Value(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""
Array of Transaction_AccessList_StorageKeys includes or excludes provided value
"""
input EVM_Transaction_Fields_Transaction_AccessList_Select_FieldSelector_Transaction_AccessList_StorageKeys {
  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]

  """Does not start with this element"""
  notStartsWith: [OLAP_String]
}

""""""
type RootQuery {
  """"""
  EVM(
    """Controls which dataset used to get results"""
    mempool: Boolean = false

    """"""
    network: evm_network

    """
    Controls which blocks are included in query results. Note that this field is ignored to query archive data
    """
    select_blocks: blocks_query_arg_enum

    """Controls which dataset used to get results"""
    dataset: dataset_arg_enum
  ): EVM
}

"""Integer 32-bit signed"""
input OLAP_Integer {
  """Equal to value"""
  eq: Int

  """Not equal to value"""
  ne: Int

  """Number in the provided list"""
  in: [Int]

  """Number is not in the provided list"""
  notIn: [Int]

  """Greater than the value"""
  ge: Int

  """Less than the value"""
  le: Int

  """Greater or equal the value"""
  gt: Int

  """Less or equal the value"""
  lt: Int
}

"""Date representation YYYY-MM-DD format"""
input OLAP_Date {
  """Not this date"""
  not: String

  """Date in the provided list"""
  in: [String]

  """Date is not in the provided list"""
  notIn: [String]

  """Strictly before this date"""
  before: String

  """Strictly after this date"""
  after: String

  """Before this date and including it"""
  till: String

  """After this date and including it"""
  since: String

  """Exact match the date"""
  is: String
}

"""Array of Call_CallPath includes or excludes provided value"""
input EVM_DEXTradeByToken_Fields_Call_CallPath_Select_Call_CallPath {
  """Starts with this element"""
  startsWith: [OLAP_Integer]

  """Ends with this element"""
  endsWith: [OLAP_Integer]

  """Does not start with this element"""
  notStartsWith: [OLAP_Integer]

  """Does not End with this element"""
  notEndsWith: [OLAP_Integer]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_Integer]

  """Excludes this element"""
  excludes: [OLAP_Integer]
}

"""Select by TransactionStatus"""
input EVM_Transaction_Input_TransactionStatus_InputType {
  """"""
  Success: Boolean

  """"""
  EndError: OLAP_String

  """"""
  FaultError: OLAP_String
}

"""Array of Trade_Sell_Ids includes or excludes provided value"""
input EVM_DEXTrade_Fields_Trade_Sell_Ids_Select_Trade_Sell_Ids {
  """Ends with this element"""
  endsWith: [OLAP_BigInteger]

  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]
}

"""Select by Block"""
input EVM_Block_Input_Block_InputType {
  """"""
  L1: EVM_Block_Input_Block_L1_InputType

  """"""
  GasLimit: OLAP_BigInteger

  """"""
  Hash: OLAP_String

  """"""
  TxCount: OLAP_Integer

  """"""
  UncleHash: OLAP_String

  """"""
  MixDigest: OLAP_String

  """"""
  Time: OLAP_DateTime

  """"""
  Date: OLAP_Date

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  Bloom: OLAP_String

  """"""
  Root: OLAP_String

  """"""
  BaseFee: EVM_Amount_With_Decimals

  """"""
  Nonce: OLAP_BigInteger

  """"""
  Coinbase: OLAP_String

  """"""
  Extra: OLAP_String

  """"""
  TxHash: OLAP_String

  """"""
  Number: OLAP_BigInteger

  """"""
  Result: EVM_Block_Input_Block_Result_InputType

  """"""
  ParentHash: OLAP_String

  """"""
  ReceiptHash: OLAP_String

  """"""
  Difficulty: OLAP_BigInteger

  """"""
  UnclesCount: OLAP_Integer
}

"""Enumeration for Trade_Side"""
enum EVM_DEXTradeByToken_Input_Trade_Side_Type_Input_Trade_Side_Input {
  """Trade_Side buy"""
  buy

  """Trade_Side sell"""
  sell
}

"""Select by Block"""
input EVM_Uncle_Input_Block_InputType {
  """"""
  Difficulty: OLAP_BigInteger

  """"""
  UncleHash: OLAP_String

  """"""
  BaseFee: EVM_Amount_With_Decimals

  """"""
  TxHash: OLAP_String

  """"""
  GasUsed: OLAP_BigInteger

  """"""
  ParentHash: OLAP_String

  """"""
  Hash: OLAP_String

  """"""
  Time: OLAP_DateTime

  """"""
  Nonce: OLAP_BigInteger

  """"""
  Number: OLAP_BigInteger

  """"""
  MixDigest: OLAP_String

  """"""
  Date: OLAP_Date

  """"""
  Bloom: OLAP_String

  """"""
  Result: EVM_Uncle_Input_Block_Result_InputType

  """"""
  Extra: OLAP_String

  """"""
  TxCount: OLAP_Integer

  """"""
  L1: EVM_Uncle_Input_Block_L1_InputType

  """"""
  GasLimit: OLAP_BigInteger

  """"""
  Root: OLAP_String

  """"""
  UnclesCount: OLAP_Integer

  """"""
  Coinbase: OLAP_String

  """"""
  ReceiptHash: OLAP_String
}

"""Uncle blocks in EVM Blockchain"""
type EVM_Uncle_Cube {
  """Block fields"""
  Block: EVM_Uncle_Fields_Block

  """ChainId value"""
  ChainId(
    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): String

  """Uncle fields"""
  Uncle: EVM_Uncle_Fields_Uncle

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Uncle_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Uncle_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Uncle_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Uncle_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Count records or uniques of arguments"""
  count(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_Uncle_EnumFields]
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_Uncle_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Uncle_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Uncle_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Uncle_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Uncle_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Uncle_NumFields
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_Uncle_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Argument for Median for a set of values"""
    of: EVM_Uncle_NumFields!
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_Uncle_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_Uncle_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Uncle_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Uncle_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Argument for Skew for a set of values"""
    of: EVM_Uncle_NumFields!
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_Uncle_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Argument for sum"""
    of: EVM_Uncle_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Uncle_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Uncle_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Uncle_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter
  ): Float

  """Count unique records"""
  uniq(
    """Uniq values of the field"""
    of: [EVM_Uncle_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String
  ): String
}

"""Selector for Arguments"""
input EVM_Event_Fields_Arguments_Select_FieldSelector {
  """Select value for Value"""
  Value: EVM_ValueUnionSelector

  """Select value for Name"""
  Name: OLAP_String

  """Select value for Type"""
  Type: OLAP_String

  """Select value for Index"""
  Index: OLAP_Integer

  """Select value for Path"""
  Path: EVM_Event_Fields_Arguments_Select_FieldSelector_Arguments_Path
}

"""BalanceUpdate fields"""
type EVM_TokenHolder_Fields_BalanceUpdate {
  """Count value"""
  Count(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """FirstDate value"""
  FirstDate(
    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields
  ): String

  """InAmount value"""
  InAmount(
    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): String

  """InCount value"""
  InCount(
    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields
  ): String

  """LastDate value"""
  LastDate(
    """Date interval in specified units"""
    interval: OLAP_DateInterval

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date
  ): String

  """OutAmount value"""
  OutAmount(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """OutCount value"""
  OutCount(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_TokenHolder_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_TokenHolder_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""Array of Trade_Buy_Ids includes or excludes provided value"""
input EVM_DEXTrade_Fields_Trade_Buy_Ids_Select_Trade_Buy_Ids {
  """Does not start with this element"""
  notStartsWith: [OLAP_BigInteger]

  """Does not End with this element"""
  notEndsWith: [OLAP_BigInteger]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_BigInteger]

  """Excludes this element"""
  excludes: [OLAP_BigInteger]

  """Starts with this element"""
  startsWith: [OLAP_BigInteger]

  """Ends with this element"""
  endsWith: [OLAP_BigInteger]
}

"""Block of transactions in EVM Blockchain"""
type EVM_Block_Cube {
  """Block fields"""
  Block: EVM_Block_Fields_Block

  """ChainId value"""
  ChainId(
    """Return value when the argument is maximum"""
    maximum: EVM_Block_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Block_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): String

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_Block_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_Block_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_Block_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_Block_EnumFields]

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """First argument for Covariance between two arguments"""
    of: EVM_Block_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_Block_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_Block_NumFields
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_Block_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """Argument for gini"""
    of: EVM_Block_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """Argument for nakamoto index"""
    of: EVM_Block_NumFields!
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_Block_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_Block_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_Block_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_Block_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_Block_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_Block_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter
  ): Float

  """Count unique records"""
  uniq(
    """Uniq values of the field"""
    of: [EVM_Block_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_Block_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Select by L1"""
input EVM_Transfer_Input_Block_L1_InputType {
  """"""
  Hash: OLAP_String

  """"""
  ParentHash: OLAP_String
}

"""Listed names of fields in a cube"""
enum EVM_DEXTradeByToken_EnumFields {
  """"""
  Trade_Side_Currency_SmartContract

  """"""
  Transaction_Protected

  """"""
  Trade_Currency_SmartContract

  """"""
  Trade_Dex_SmartContract

  """"""
  Block_Difficulty

  """"""
  Transaction_From

  """"""
  Trade_Sender

  """"""
  Receipt_GasUsed

  """"""
  Trade_Side_Buyer

  """"""
  Trade_Buyer

  """"""
  Fee_EffectiveGasPrice

  """"""
  Trade_Currency_HasURI

  """"""
  Call_Index

  """"""
  Call_CallPath

  """"""
  Call_Reverted

  """"""
  Transaction_GasFeeCap

  """"""
  Fee_GasRefund

  """"""
  Log_LogAfterCallIndex

  """"""
  Trade_OrderId

  """"""
  Trade_Dex_ProtocolName

  """"""
  TransactionStatus_FaultError

  """"""
  Transaction_Index

  """"""
  Block_Date

  """"""
  Trade_Side_Currency_Symbol

  """"""
  Call_Error

  """"""
  Log_Signature_Signature

  """"""
  Log_Signature_Name

  """"""
  Transaction_Hash

  """"""
  Log_Signature_Parsed

  """"""
  Call_Create

  """"""
  Block_GasUsed

  """"""
  Call_Signature_Signature

  """"""
  Call_Delegated

  """"""
  Trade_Currency_Symbol

  """"""
  Call_GasUsed

  """"""
  Trade_Success

  """"""
  Block_GasLimit

  """"""
  Trade_Ids

  """"""
  Block_Number

  """"""
  ChainId

  """"""
  Trade_Side_Currency_Decimals

  """"""
  Block_Coinbase

  """"""
  Receipt_ContractAddress

  """"""
  Transaction_Type

  """"""
  Trade_Side_Ids

  """"""
  Trade_Side_Currency_Name

  """"""
  Call_Signature_Parsed

  """"""
  Log_Signature_SignatureHash

  """"""
  Trade_Currency_Name

  """"""
  Call_Gas

  """"""
  Trade_URIs

  """"""
  Trade_Side_Currency_ProtocolName

  """"""
  Trade_Seller

  """"""
  Transaction_Value

  """"""
  Log_Signature_SignatureType

  """"""
  Trade_Side_Seller

  """"""
  Trade_Currency_Fungible

  """"""
  Block_L1_Hash

  """"""
  Trade_Dex_Pair_Decimals

  """"""
  Call_Signature_Name

  """"""
  Trade_Dex_ProtocolFamily

  """"""
  Block_Hash

  """"""
  Trade_Side_URIs

  """"""
  Trade_Dex_Delegated

  """"""
  TransactionStatus_Success

  """"""
  Fee_PriorityFeePerGas

  """"""
  Transaction_Nonce

  """"""
  Trade_Side_Type

  """"""
  Block_Nonce

  """"""
  Trade_Dex_DelegatedTo

  """"""
  Trade_Dex_Pair_Symbol

  """"""
  Trade_Dex_Pair_Name

  """"""
  Transaction_To

  """"""
  Receipt_Status

  """"""
  Fee_Burnt

  """"""
  Trade_Dex_OwnerAddress

  """"""
  Log_Signature_Abi

  """"""
  Trade_Amount

  """"""
  Trade_Currency_ProtocolName

  """"""
  Transaction_GasTipCap

  """"""
  Trade_Side_Amount

  """"""
  Call_InternalCalls

  """"""
  Block_BaseFee

  """"""
  Transaction_Gas

  """"""
  Log_Index

  """"""
  Block_L1_ParentHash

  """"""
  Fee_Savings

  """"""
  Call_Signature_SignatureHash

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Call_From

  """"""
  Trade_Price

  """"""
  TransactionStatus_EndError

  """"""
  Call_Success

  """"""
  Trade_Fees

  """"""
  Call_CallerIndex

  """"""
  Receipt_L1_GasPrice

  """"""
  Transaction_Cost

  """"""
  Call_To

  """"""
  Receipt_Type

  """"""
  Trade_Currency_Decimals

  """"""
  Trade_Dex_Pair_SmartContract

  """"""
  Call_SelfDestruct

  """"""
  Transaction_GasPrice

  """"""
  Call_Signature_SignatureType

  """"""
  Call_Value

  """"""
  Fee_MinerReward

  """"""
  Fee_SenderFee

  """"""
  Trade_Side_Currency_Fungible

  """"""
  Log_SmartContract

  """"""
  Receipt_L1_Fee

  """"""
  Trade_Side_Currency_HasURI

  """"""
  Trade_Side_OrderId

  """"""
  Trade_Dex_ProtocolVersion

  """"""
  Block_ParentHash

  """"""
  Call_Signature_Abi

  """"""
  Block_Time
}

"""String value"""
input OLAP_String {
  """Not this string"""
  not: String

  """String in the provided list"""
  in: [String]

  """String is not in the provided list"""
  notIn: [String]

  """Exact match the string"""
  is: String
}

"""Float 64 bit precision data"""
input OLAP_Float {
  """Greater than the value"""
  ge: Float

  """Less than the value"""
  le: Float

  """Greater or equal the value"""
  gt: Float

  """Less or equal the value"""
  lt: Float

  """Equal to value"""
  eq: Float

  """Not equal to value"""
  ne: Float
}

""""""
input EVM_Uncle_Filter {
  """Select by Uncle"""
  Uncle: EVM_Uncle_Input_Uncle_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Block"""
  Block: EVM_Uncle_Input_Block_InputType
}

"""Block fields"""
type EVM_Uncle_Fields_Block {
  """BaseFee value"""
  BaseFee(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """Bloom value"""
  Bloom(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Coinbase value"""
  Coinbase(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Date value"""
  Date(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Date

    """Date interval in specified units"""
    interval: OLAP_DateInterval
  ): String

  """Difficulty value"""
  Difficulty(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Extra value"""
  Extra(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """GasLimit value"""
  GasLimit(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """GasUsed value"""
  GasUsed(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """L1 fields"""
  L1: EVM_Uncle_Fields_Block_L1

  """MixDigest value"""
  MixDigest(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields
  ): String

  """Nonce value"""
  Nonce(
    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields
  ): String

  """Number value"""
  Number(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """ParentHash value"""
  ParentHash(
    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields
  ): String

  """ReceiptHash value"""
  ReceiptHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Result fields"""
  Result: EVM_Uncle_Fields_Block_Result

  """Root value"""
  Root(
    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields
  ): String

  """Time value"""
  Time(
    """Time interval in specified units"""
    interval: OLAP_DateTimeInterval

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_DateTime
  ): DateTime

  """TxCount value"""
  TxCount(
    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields
  ): Int

  """TxHash value"""
  TxHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UncleHash value"""
  UncleHash(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """UnclesCount value"""
  UnclesCount(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int
}

"""Result fields"""
type EVM_Uncle_Fields_Block_Result {
  """Errors value"""
  Errors(
    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """Return value when the argument is minimum"""
    minimum: EVM_Uncle_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Uncle_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Uncle_CompareFields
  ): String
}

"""Listed names of numeric fields in a cube"""
enum EVM_Transfer_NumFields {
  """"""
  Receipt_Status

  """"""
  Block_Number

  """"""
  Fee_PriorityFeePerGas

  """"""
  Log_Index

  """"""
  Block_BaseFee

  """"""
  Transaction_Cost

  """"""
  Transaction_Nonce

  """"""
  Call_Index

  """"""
  Transaction_Gas

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Receipt_L1_Fee

  """"""
  Transfer_Amount

  """"""
  Transaction_Index

  """"""
  Fee_EffectiveGasPrice

  """"""
  Fee_Burnt

  """"""
  Transfer_Id

  """"""
  Call_InternalCalls

  """"""
  Transaction_GasPrice

  """"""
  Block_Nonce

  """"""
  Transaction_Time

  """"""
  Transaction_Type

  """"""
  Block_Difficulty

  """"""
  Transaction_GasFeeCap

  """"""
  Transaction_Value

  """"""
  Fee_Savings

  """"""
  Log_Signature_SignatureType

  """"""
  Receipt_Type

  """"""
  Call_CallerIndex

  """"""
  Call_GasUsed

  """"""
  Transfer_Currency_Decimals

  """"""
  ChainId

  """"""
  Receipt_L1_GasPrice

  """"""
  Log_LogAfterCallIndex

  """"""
  Transaction_GasTipCap

  """"""
  Fee_MinerReward

  """"""
  Block_GasLimit

  """"""
  Call_Gas

  """"""
  Block_GasUsed

  """"""
  Receipt_GasUsed

  """"""
  Fee_SenderFee

  """"""
  Call_Value

  """"""
  Fee_GasRefund
}

"""Select by ContractAddressCode"""
input EVM_Transaction_Input_Receipt_ContractAddressCode_InputType {
  """"""
  Suicided: Boolean

  """"""
  Size: OLAP_Integer

  """"""
  Hash: OLAP_String
}

"""Select by Fee"""
input EVM_Call_Input_Fee_InputType {
  """"""
  Burnt: EVM_Amount_With_Decimals

  """"""
  MinerReward: EVM_Amount_With_Decimals

  """"""
  SenderFee: EVM_Amount_With_Decimals

  """"""
  GasRefund: OLAP_BigInteger

  """"""
  EffectiveGasPrice: EVM_Amount_With_Decimals

  """"""
  Savings: EVM_Amount_With_Decimals

  """"""
  PriorityFeePerGas: EVM_Amount_With_Decimals
}

"""Currency fields"""
type EVM_Transfer_Fields_Transfer_Currency {
  """Decimals value"""
  Decimals(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): Int

  """Delegated value"""
  Delegated(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """DelegatedTo value"""
  DelegatedTo(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Fungible value"""
  Fungible(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): Boolean

  """HasURI value"""
  HasURI(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """Name value"""
  Name(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """Native value"""
  Native(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean
  ): Boolean

  """ProtocolName value"""
  ProtocolName(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """SmartContract value"""
  SmartContract(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Symbol value"""
  Symbol(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String
}

"""Array of Trade_Side_URIs includes or excludes provided value"""
input EVM_DEXTradeByToken_Input_Trade_Side_URIs_Input_Trade_Side_URIs {
  """Does not start with this element"""
  notStartsWith: [OLAP_String]

  """Does not End with this element"""
  notEndsWith: [OLAP_String]

  """Length of the array"""
  length: OLAP_Integer

  """Includes this element"""
  includes: [OLAP_String]

  """Excludes this element"""
  excludes: [OLAP_String]

  """Starts with this element"""
  startsWith: [OLAP_String]

  """Ends with this element"""
  endsWith: [OLAP_String]
}

"""Method used to calculate"""
enum OLAP_Metric_Calculation_Method_Exact {
  """Calculates the exact metric"""
  exact

  """Calculates the approximate metric"""
  approximate
}

"""DEX Trades by a token in EVM Blockchain"""
type EVM_DEXTradeByToken_Cube {
  """Block fields"""
  Block: EVM_DEXTradeByToken_Fields_Block

  """Call fields"""
  Call: EVM_DEXTradeByToken_Fields_Call

  """ChainId value"""
  ChainId(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """Fee fields"""
  Fee: EVM_DEXTradeByToken_Fields_Fee

  """Log fields"""
  Log: EVM_DEXTradeByToken_Fields_Log

  """Receipt fields"""
  Receipt: EVM_DEXTradeByToken_Fields_Receipt

  """Trade fields"""
  Trade: EVM_DEXTradeByToken_Fields_Trade

  """Transaction fields"""
  Transaction: EVM_DEXTradeByToken_Fields_Transaction

  """TransactionStatus fields"""
  TransactionStatus: EVM_DEXTradeByToken_Fields_TransactionStatus

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_DEXTradeByToken_NumFields

    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_DEXTradeByToken_NumFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_DEXTradeByToken_NumFields

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_DEXTradeByToken_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """Count distinct values of the field"""
    distinct: [EVM_DEXTradeByToken_EnumFields]

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String
  ): String

  """Covariance between two arguments"""
  covariance(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Covariance between two arguments"""
    of: EVM_DEXTradeByToken_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_DEXTradeByToken_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_DEXTradeByToken_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_DEXTradeByToken_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Kurtosis for a set of values"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Median for a set of values"""
  median(
    """Argument for Median for a set of values"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for nakamoto index"""
    of: EVM_DEXTradeByToken_NumFields!

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Argument for quantile"""
    of: EVM_DEXTradeByToken_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_DEXTradeByToken_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Argument for Standard deviation of the values"""
    of: EVM_DEXTradeByToken_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Argument for sum"""
    of: EVM_DEXTradeByToken_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_DEXTradeByToken_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_DEXTradeByToken_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_DEXTradeByToken_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_DEXTradeByToken_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}

"""Sell fields"""
type EVM_DEXTrade_Fields_Trade_Sell {
  """Amount value"""
  Amount(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields
  ): String

  """Buyer value"""
  Buyer(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Currency fields"""
  Currency: EVM_DEXTrade_Fields_Trade_Sell_Currency

  """Ids value"""
  Ids(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Trade_Sell_Ids_Select_Trade_Sell_Ids
  ): [String]

  """OrderId value"""
  OrderId(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Price value"""
  Price(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Float
  ): Float

  """Seller value"""
  Seller(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """URIs value"""
  URIs(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTrade_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTrade_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_DEXTrade_Fields_Trade_Sell_URIs_Select_Trade_Sell_URIs

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTrade_Filter
  ): [String]
}

"""Transaction fields"""
type EVM_Transfer_Fields_Transaction {
  """Cost value"""
  Cost(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """From value"""
  From(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Gas value"""
  Gas(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String

  """GasFeeCap value"""
  GasFeeCap(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPrice value"""
  GasPrice(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasTipCap value"""
  GasTipCap(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """Hash value"""
  Hash(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Index value"""
  Index(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Nonce value"""
  Nonce(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """Protected value"""
  Protected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): Boolean

  """Time value"""
  Time(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """To value"""
  To(
    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter
  ): String

  """Type value"""
  Type(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_Integer
  ): Int

  """Value value"""
  Value(
    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields
  ): String
}

"""Signature fields"""
type EVM_Transaction_Fields_Signature {
  """R value"""
  R(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """S value"""
  S(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String

  """V value"""
  V(
    """Apply a condition to a metric calculation"""
    if: EVM_Transaction_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transaction_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transaction_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_BigInteger
  ): String
}

"""TransactionStatus fields"""
type EVM_DEXTradeByToken_Fields_TransactionStatus {
  """EndError value"""
  EndError(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """FaultError value"""
  FaultError(
    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: OLAP_String
  ): String

  """Success value"""
  Success(
    """Return value when the argument is maximum"""
    maximum: EVM_DEXTradeByToken_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_DEXTradeByToken_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Boolean

    """Apply a condition to a metric calculation"""
    if: EVM_DEXTradeByToken_Filter
  ): Boolean
}

"""Listed names of fields in a cube"""
enum EVM_Uncle_EnumFields {
  """"""
  Block_BaseFee

  """"""
  Block_Bloom

  """"""
  Uncle_Block_GasUsed

  """"""
  Uncle_Block_BaseFee

  """"""
  Uncle_Block_GasLimit

  """"""
  Block_Root

  """"""
  Block_MixDigest

  """"""
  Uncle_Block_Root

  """"""
  Block_Coinbase

  """"""
  Block_GasUsed

  """"""
  Block_Number

  """"""
  Uncle_Block_MixDigest

  """"""
  Uncle_Block_Time

  """"""
  Block_Nonce

  """"""
  Uncle_Block_TxHash

  """"""
  Uncle_Index

  """"""
  Block_ReceiptHash

  """"""
  Uncle_Block_Number

  """"""
  Block_Result_Gas

  """"""
  Block_ParentHash

  """"""
  Uncle_Block_Difficulty

  """"""
  Block_L1_BaseFee

  """"""
  Uncle_Block_ParentHash

  """"""
  Block_GasLimit

  """"""
  ChainId

  """"""
  Block_UnclesCount

  """"""
  Uncle_Block_Date

  """"""
  Block_L1_Coinbase

  """"""
  Block_Difficulty

  """"""
  Uncle_Block_Extra

  """"""
  Block_TxHash

  """"""
  Block_Hash

  """"""
  Block_Date

  """"""
  Block_Result_Errors

  """"""
  Block_Extra

  """"""
  Block_UncleHash

  """"""
  Uncle_Block_Bloom

  """"""
  Block_L1_Hash

  """"""
  Uncle_Block_Coinbase

  """"""
  Uncle_Block_UncleHash

  """"""
  Block_Time

  """"""
  Uncle_Block_Nonce

  """"""
  Block_L1_ParentHash

  """"""
  Uncle_Block_ReceiptHash

  """"""
  Uncle_Block_Hash

  """"""
  Block_TxCount
}

"""Listed names of numeric fields in a cube"""
enum EVM_Call_NumFields {
  """"""
  Call_Value

  """"""
  Block_BaseFee

  """"""
  ChainId

  """"""
  Fee_PriorityFeePerGas

  """"""
  Transaction_GasFeeCap

  """"""
  Fee_EffectiveGasPrice

  """"""
  Transaction_GasPrice

  """"""
  Call_ExitIndex

  """"""
  Receipt_Status

  """"""
  Block_Number

  """"""
  Transaction_Index

  """"""
  Receipt_L1_GasPrice

  """"""
  Receipt_CumulativeGasUsed

  """"""
  Receipt_GasUsed

  """"""
  Transaction_Nonce

  """"""
  Call_EnterIndex

  """"""
  Call_Depth

  """"""
  Call_Index

  """"""
  Receipt_L1_Fee

  """"""
  Transaction_Time

  """"""
  Block_GasLimit

  """"""
  Fee_Savings

  """"""
  Transaction_GasTipCap

  """"""
  Fee_Burnt

  """"""
  Fee_SenderFee

  """"""
  Transaction_Cost

  """"""
  Call_Gas

  """"""
  Transaction_Value

  """"""
  Transaction_Gas

  """"""
  Transaction_Type

  """"""
  Block_Difficulty

  """"""
  Fee_GasRefund

  """"""
  Block_Nonce

  """"""
  Receipt_Type

  """"""
  Call_Opcode_Code

  """"""
  Fee_MinerReward

  """"""
  Call_LogCount

  """"""
  Block_GasUsed

  """"""
  Call_InternalCalls

  """"""
  Call_CallerIndex

  """"""
  Call_GasUsed
}

"""L1 fields"""
type EVM_Transfer_Fields_Receipt_L1 {
  """Fee value"""
  Fee(
    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals
  ): String

  """GasPrice value"""
  GasPrice(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: EVM_Amount_With_Decimals

    """Apply a condition to a metric calculation"""
    if: EVM_Transfer_Filter

    """Return value when the argument is maximum"""
    maximum: EVM_Transfer_CompareFields

    """Return value when the argument is minimum"""
    minimum: EVM_Transfer_CompareFields
  ): String
}

"""Type of algorithm to filter block updates"""
enum blocks_query_arg_enum {
  """Blocks from the current head and down the reorg tree"""
  trunk

  """WasOnBranch blocks on the branches of the reorg tree"""
  branches

  """All blocks ( trunk and uncles ) of the reorg tree"""
  tree
}

"""LimitBy definition"""
input EVM_TokenHolder_LimitBy {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0

  """Limit by specific field"""
  by: [EVM_TokenHolder_EnumFields]
}

""""""
input EVM_MinerReward_Filter {
  """Select by Reward"""
  Reward: EVM_MinerReward_Input_Reward_InputType

  """Big Integer ( more than 32 bits precision), including negative numbers"""
  ChainId: OLAP_BigInteger

  """Select by Block"""
  Block: EVM_MinerReward_Input_Block_InputType

  """Select by Uncle"""
  Uncle: EVM_MinerReward_Input_Uncle_InputType
}

"""Limit definition"""
input EVM_Uncle_Limit {
  """Max count in results"""
  count: Int = 0

  """Offset of results"""
  offset: Int = 0
}

"""Select by TransactionStatus"""
input EVM_Event_Input_TransactionStatus_InputType {
  """"""
  FaultError: OLAP_String

  """"""
  Success: Boolean

  """"""
  EndError: OLAP_String
}

"""Array of Arguments includes or excludes provided value"""
input EVM_Event_Fields_Arguments_Select_Arguments {
  """Includes this element"""
  includes: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Excludes this element"""
  excludes: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Starts with this element"""
  startsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Ends with this element"""
  endsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Does not start with this element"""
  notStartsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Does not End with this element"""
  notEndsWith: [EVM_Event_Fields_Arguments_Select_FieldSelector]

  """Length of the array"""
  length: OLAP_Integer
}

"""
List of token holders by specified date for tokens and native currency in EVM Blockchain
"""
type EVM_TokenHolder_Cube {
  """Balance fields"""
  Balance: EVM_TokenHolder_Fields_Balance

  """BalanceUpdate fields"""
  BalanceUpdate: EVM_TokenHolder_Fields_BalanceUpdate

  """Currency fields"""
  Currency: EVM_TokenHolder_Fields_Currency

  """Holder fields"""
  Holder: EVM_TokenHolder_Fields_Holder

  """Average of the values"""
  average(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Average of the values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Contingency coefficient between two arguments"""
  contingency(
    """Second argument for Contingency coefficient between two arguments"""
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Contingency coefficient between two arguments"""
    of: EVM_TokenHolder_NumFields
  ): Float

  """Pearson correlation coefficient between two arguments"""
  correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    Second argument for Pearson correlation coefficient between two arguments
    """
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    First argument for Pearson correlation coefficient between two arguments
    """
    of: EVM_TokenHolder_NumFields
  ): Float

  """Count records or uniques of arguments"""
  count(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Count distinct values of the field"""
    distinct: [EVM_TokenHolder_EnumFields]

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): String

  """Covariance between two arguments"""
  covariance(
    """First argument for Covariance between two arguments"""
    of: EVM_TokenHolder_NumFields

    """Second argument for Covariance between two arguments"""
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float
  ): Float

  """Cramér's phi coefficient between two arguments"""
  cramers(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Cramér's phi coefficient between two arguments"""
    of: EVM_TokenHolder_NumFields

    """Second argument for Cramér's phi coefficient between two arguments"""
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Cramér's phi coefficient with bias correction between two arguments"""
  cramers_bias_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Cramér's phi coefficient with bias correction between two arguments
    """
    of: EVM_TokenHolder_NumFields

    """
    Second argument for Cramér's phi coefficient with bias correction between two arguments
    """
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Dispersion for a set of values"""
  dispersion(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Dispersion for a set of values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Entropy for a set of values"""
  entropy(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Entropy for a set of values"""
    of: EVM_TokenHolder_NumFields!
  ): Float

  """Gini factor of argument"""
  gini(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for gini"""
    of: EVM_TokenHolder_NumFields!
  ): Float

  """Kurtosis for a set of values"""
  kurtosis(
    """Argument for Kurtosis for a set of values"""
    of: EVM_TokenHolder_NumFields!

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Median for a set of values"""
  median(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Median for a set of values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """
  Nakamoto index of argument. Count of values more than 0.51 of the range. Ratio (0.51) can be specified as optional parameter
  """
  nakamoto(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Ratio for nakamoto index ( default is 0.51, can be from 0 to 1 )"""
    ratio: Float = 0.51

    """Argument for nakamoto index"""
    of: EVM_TokenHolder_NumFields!
  ): Float

  """Approximate quantile of a numeric data sequence"""
  quantile(
    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact

    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for quantile"""
    of: EVM_TokenHolder_NumFields!

    """
    Level of quantile. Optional parameter. Constant floating-point number from 0 to 1. We recommend using a level value in the range of [0.01, 0.99]. Default value: 0.5. At level=0.5 the function calculates median.
    """
    level: Float = 0.5
  ): Float

  """Rank correlation coefficient between two arguments"""
  rank_correlation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """First argument for Rank correlation coefficient between two arguments"""
    of: EVM_TokenHolder_NumFields

    """Second argument for Rank correlation coefficient between two arguments"""
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Skew for a set of values"""
  skew(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Skew for a set of values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Standard deviation of the values"""
  standard_deviation(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Standard deviation of the values"""
    of: EVM_TokenHolder_NumFields!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Sum values of argument"""
  sum(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Argument for sum"""
    of: EVM_TokenHolder_NumFields!
  ): String

  """Theil index of argument"""
  theil_index(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """Argument for Theil index"""
    of: EVM_TokenHolder_NumFields!
  ): Float

  """
  Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
  """
  theils_corrected(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_Float

    """
    First argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    of: EVM_TokenHolder_NumFields

    """
    Second argument for Theil's U uncertainty coefficient, coefficient with bias correction between two arguments
    """
    with: EVM_TokenHolder_NumFields

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter
  ): Float

  """Count unique records"""
  uniq(
    """
    Defines the condition to filter the results by the value of this metric
    """
    selectWhere: Metric_filter_String

    """Uniq values of the field"""
    of: [EVM_TokenHolder_EnumFields]!

    """Apply a condition to a metric calculation"""
    if: EVM_TokenHolder_Filter

    """Method used to calculate metric values"""
    method: OLAP_Metric_Calculation_Method_Exact
  ): String
}
